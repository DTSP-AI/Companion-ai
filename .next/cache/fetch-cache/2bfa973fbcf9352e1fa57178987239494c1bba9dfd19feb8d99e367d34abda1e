{"kind":"FETCH","data":{"headers":{"accelerate-cache-status":"none","accelerate-query-engine-jwt":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjYW5TY2FsZSI6ZmFsc2UsImV4cCI6MTcyNzc1OTkxOC4yMTEsImlhdCI6MTcyNzc1OTg1OC4yMTEsIm1hY2hpbmVzIjpbeyJkYXRhYmFzZUhvc3QiOiJhenVyZS5jb20iLCJpZCI6Ijc2OTUzZTFhMWYxZmJkNGYwNDE4NjNjNTAyM2ZiMjU0NGQ2YjVkNGZjYmI0YzE4MjU5YTAzYzE2NGE1YjdjNzQiLCJpbnN0YW5jZUlkIjoiaS0wY2E0YjI5NmEwNjIzOWE0MiIsInJlZ2lvbiI6InVzLWVhc3QtMSIsImFkZHJlc3MiOiJpLTBjYTRiMjk2YTA2MjM5YTQyLnFlLnByaXNtYS1kYXRhLm5ldCJ9XSwiYWNjZWxlcmF0ZUxpbWl0cyI6eyJhY2NlbGVyYXRlUmVzcG9uc2VTaXplTGltaXQiOjUyNDI4ODAsImFjY2VsZXJhdGVRdWVyeUR1cmF0aW9uTGltaXQiOjEwLCJhY2NlbGVyYXRlSW50ZXJhY3RpdmVUcmFuc2FjdGlvbkR1cmF0aW9uTGltaXQiOjE1fX0.DAfaNQu9coJmOxbIWnUxaUHzIwK-CIvZYgTKoljRBmI","accelerate-signature":"bda8a95a01a6fd3ffc4d0cc811441447ea02d3652c56e8cddd64f2de22220230","cache-control":"public, s-maxage=86400, max-age=0","cache-tag":"6dd1ebf942af27c113084d36f0e2cf64b3fbecd08b5878809c49a310cb9635c2","cf-cache-status":"DYNAMIC","cf-ray":"8cb9fcc95f7c0a1a-MIA","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json","date":"Tue, 01 Oct 2024 05:17:38 GMT","last-modified":"Tue, 01 Oct 2024 05:17:38 GMT","prisma-qe-incoming-connections":"1","prisma-qe-incoming-queue-length":"0","prisma-qe-latency":"30.264","prisma-qe-network":"174","prisma-request-id":"8cb9fcc95f7c0a1a","prisma-start-type":"warm","qe-content-length":"24940","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-elapsed":"30264"},"body":"","status":200,"url":"https://accelerate.prisma-data.net/5.19.1/f81cafa8a0179fa2c3fedb42705f13688b2014369aaadc7905a73dfe3b84d245/graphql"},"revalidate":31536000,"tags":[]}