{"kind":"FETCH","data":{"headers":{"accelerate-cache-status":"none","accelerate-query-engine-jwt":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjYW5TY2FsZSI6ZmFsc2UsImV4cCI6MTcyNjU5OTA2OS44ODUsImlhdCI6MTcyNjU5OTAwOS44ODUsIm1hY2hpbmVzIjpbeyJkYXRhYmFzZUhvc3QiOiJhenVyZS5jb20iLCJpZCI6IjMyMjhlNjU4MDgxOWU1YWYxMmY4Yzk1ODA4YjZjZDg0N2YyMTNkZDRiNGYxZDA0ZDhiMTNlOWM4YzA0OTgzYTMiLCJpbnN0YW5jZUlkIjoiaS0wNTEyYTlkYWI5OGZlNjJhOSIsInJlZ2lvbiI6InVzLWVhc3QtMSIsImFkZHJlc3MiOiJpLTA1MTJhOWRhYjk4ZmU2MmE5LnFlLnByaXNtYS1kYXRhLm5ldCJ9XSwiYWNjZWxlcmF0ZUxpbWl0cyI6eyJhY2NlbGVyYXRlUmVzcG9uc2VTaXplTGltaXQiOjUyNDI4ODAsImFjY2VsZXJhdGVRdWVyeUR1cmF0aW9uTGltaXQiOjEwLCJhY2NlbGVyYXRlSW50ZXJhY3RpdmVUcmFuc2FjdGlvbkR1cmF0aW9uTGltaXQiOjE1fX0.VFtIFD933ERxSGBE9iQlSZwXDRv1KYNDRrs_JsgOEng","accelerate-signature":"bda8a95a01a6fd3ffc4d0cc811441447ea02d3652c56e8cddd64f2de22220230","cache-control":"public, s-maxage=86400, max-age=0","cache-tag":"6dd1ebf942af27c113084d36f0e2cf64b3fbecd08b5878809c49a310cb9635c2","cf-cache-status":"DYNAMIC","cf-ray":"8c4b47c35b42d9a5-MIA","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json","date":"Tue, 17 Sep 2024 18:50:10 GMT","last-modified":"Tue, 17 Sep 2024 18:50:10 GMT","prisma-qe-incoming-connections":"1","prisma-qe-incoming-queue-length":"0","prisma-qe-latency":"15.614","prisma-qe-network":"139","prisma-request-id":"8c4b47c35b42d9a5","prisma-start-type":"warm","qe-content-length":"12554","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-elapsed":"15614"},"body":"","status":200,"url":"https://accelerate.prisma-data.net/5.19.1/16a0e708477a3b6cd713cf060473e04616f5e85fbccd64f57c03e13ae2cfd469/graphql"},"revalidate":31536000,"tags":[]}