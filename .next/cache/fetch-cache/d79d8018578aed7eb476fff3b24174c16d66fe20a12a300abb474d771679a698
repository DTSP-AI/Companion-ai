{"kind":"FETCH","data":{"headers":{"accelerate-cache-status":"none","accelerate-query-engine-jwt":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mjc3MTM3NTIuMTQsImlhdCI6MTcyNzcxMzY5Mi4xNCwiY2FuU2NhbGUiOmZhbHNlLCJtYWNoaW5lcyI6W3siZGF0YWJhc2VIb3N0IjoiYXp1cmUuY29tIiwiaWQiOiI3Njk1M2UxYTFmMWZiZDRmMDQxODYzYzUwMjNmYjI1NDRkNmI1ZDRmY2JiNGMxODI1OWEwM2MxNjRhNWI3Yzc0IiwiaW5zdGFuY2VJZCI6ImktMDk4OTA0NWM1YTgxODY5OWMiLCJyZWdpb24iOiJ1cy1lYXN0LTEiLCJhZGRyZXNzIjoiaS0wOTg5MDQ1YzVhODE4Njk5Yy5xZS5wcmlzbWEtZGF0YS5uZXQifV0sImFjY2VsZXJhdGVMaW1pdHMiOnsiYWNjZWxlcmF0ZVJlc3BvbnNlU2l6ZUxpbWl0Ijo1MjQyODgwLCJhY2NlbGVyYXRlUXVlcnlEdXJhdGlvbkxpbWl0IjoxMCwiYWNjZWxlcmF0ZUludGVyYWN0aXZlVHJhbnNhY3Rpb25EdXJhdGlvbkxpbWl0IjoxNX19.2D-WR3mIts6AGSLuNUgDegU9scihgyB2bgciJ0vfWk4","accelerate-signature":"13830d152715922af93f268344b45a0349ec7cb70d1e75e066f8138e378cc21f","cache-control":"public, s-maxage=86400, max-age=0","cache-tag":"6dd1ebf942af27c113084d36f0e2cf64b3fbecd08b5878809c49a310cb9635c2","cf-cache-status":"DYNAMIC","cf-ray":"8cb595ec2eec3711-MIA","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json","date":"Mon, 30 Sep 2024 16:28:21 GMT","last-modified":"Mon, 30 Sep 2024 16:28:21 GMT","prisma-qe-incoming-connections":"1","prisma-qe-incoming-queue-length":"0","prisma-qe-latency":"22.031","prisma-qe-network":"145","prisma-request-id":"8cb595ec2eec3711","prisma-start-type":"warm","qe-content-length":"36563","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-elapsed":"22031"},"body":"","status":200,"url":"https://accelerate.prisma-data.net/5.19.1/f81cafa8a0179fa2c3fedb42705f13688b2014369aaadc7905a73dfe3b84d245/graphql"},"revalidate":31536000,"tags":[]}