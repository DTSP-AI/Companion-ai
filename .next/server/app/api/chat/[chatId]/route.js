"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/[chatId]/route";
exports.ids = ["app/api/chat/[chatId]/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "@prisma/client/scripts/default-index.js":
/*!**********************************************************!*\
  !*** external "@prisma/client/scripts/default-index.js" ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = require("@prisma/client/scripts/default-index.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:fs/promises":
/*!***********************************!*\
  !*** external "node:fs/promises" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:fs/promises");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node:https");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&page=%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2F%5BchatId%5D%2Froute.ts&appDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&page=%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2F%5BchatId%5D%2Froute.ts&appDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_AI_src_Companion_UI_SaaS_AI_Companion_src_app_api_chat_chatId_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/chat/[chatId]/route.ts */ \"(rsc)/./src/app/api/chat/[chatId]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/[chatId]/route\",\n        pathname: \"/api/chat/[chatId]\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/[chatId]/route\"\n    },\n    resolvedPagePath: \"C:\\\\AI_src\\\\Companion_UI\\\\SaaS-AI-Companion\\\\src\\\\app\\\\api\\\\chat\\\\[chatId]\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_AI_src_Companion_UI_SaaS_AI_Companion_src_app_api_chat_chatId_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/chat/[chatId]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGJTVCY2hhdElkJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGJTVCY2hhdElkJTVEJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRiU1QmNoYXRJZCU1RCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDQUlfc3JjJTVDQ29tcGFuaW9uX1VJJTVDU2FhUy1BSS1Db21wYW5pb24lNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNBSV9zcmMlNUNDb21wYW5pb25fVUklNUNTYWFTLUFJLUNvbXBhbmlvbiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDb0M7QUFDakg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1jb21wYW5pb24vPzY2MTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcQUlfc3JjXFxcXENvbXBhbmlvbl9VSVxcXFxTYWFTLUFJLUNvbXBhbmlvblxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxjaGF0XFxcXFtjaGF0SWRdXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0L1tjaGF0SWRdL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hhdC9bY2hhdElkXVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2hhdC9bY2hhdElkXS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXEFJX3NyY1xcXFxDb21wYW5pb25fVUlcXFxcU2FhUy1BSS1Db21wYW5pb25cXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcY2hhdFxcXFxbY2hhdElkXVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2hhdC9bY2hhdElkXS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&page=%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2F%5BchatId%5D%2Froute.ts&appDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/chat/[chatId]/route.ts":
/*!********************************************!*\
  !*** ./src/app/api/chat/[chatId]/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _langchain_openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/openai */ \"(rsc)/./node_modules/@langchain/openai/index.js\");\n/* harmony import */ var langchain_chains__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! langchain/chains */ \"(rsc)/./node_modules/langchain/chains.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _lib_memory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/memory */ \"(rsc)/./src/lib/memory.ts\");\n/* harmony import */ var _lib_prismadb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/prismadb */ \"(rsc)/./src/lib/prismadb.ts\");\n/* harmony import */ var _lib_rate_limit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/rate-limit */ \"(rsc)/./src/lib/rate-limit.ts\");\n\n\n\n\n\n\n\n\nconsole.log(\"\\uD83D\\uDD27 [DEBUG] API route loaded\");\nconsole.log(\"\\uD83D\\uDD27 [DEBUG] Process environment variables:\");\nconsole.log(\"\\uD83D\\uDD27 [DEBUG] OPENAI_API_KEY is\", process.env.OPENAI_API_KEY ? \"set\" : \"NOT set\");\nconst conversationChains = new Map();\nconst getCharacterDescription = (description)=>{\n    console.log(\"\\uD83D\\uDD27 [DEBUG] Entered getCharacterDescription()\");\n    console.log(\"\\uD83D\\uDD0D [getCharacterDescription] Processing character description\");\n    const result = description ? JSON.stringify(description) : \"No character description provided.\";\n    console.log(`📝 [getCharacterDescription] Result: ${result.substring(0, 50)}...`);\n    console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting getCharacterDescription()\");\n    return result;\n};\nconst createConversationChain = (characterDescription, bufferMemory)=>{\n    console.log(\"\\uD83D\\uDD27 [DEBUG] Entered createConversationChain()\");\n    if (!process.env.OPENAI_API_KEY) {\n        console.error(\"❌ [ERROR] OPENAI_API_KEY is not set in environment variables\");\n        throw new Error(\"OPENAI_API_KEY is not set\");\n    } else {\n        console.log(\"✅ [INFO] OPENAI_API_KEY is set\");\n    }\n    console.log(\"\\uD83D\\uDD17 [CREATE_CHAIN] Creating new conversation chain\");\n    const llm = new _langchain_openai__WEBPACK_IMPORTED_MODULE_1__.ChatOpenAI({\n        modelName: \"gpt-4\",\n        temperature: 0.9,\n        openAIApiKey: process.env.OPENAI_API_KEY\n    });\n    console.log(`🤖 [CREATE_CHAIN] LLM created with model: ${llm.modelName}`);\n    const prompt = _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.ChatPromptTemplate.fromMessages([\n        _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.SystemMessagePromptTemplate.fromTemplate(characterDescription),\n        new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.MessagesPlaceholder(\"shortTermHistory\"),\n        _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.HumanMessagePromptTemplate.fromTemplate(\"{input}\")\n    ]);\n    console.log(\"\\uD83D\\uDCDD [CREATE_CHAIN] Prompt template created\");\n    const chain = new langchain_chains__WEBPACK_IMPORTED_MODULE_2__.ConversationChain({\n        prompt: prompt,\n        llm: llm,\n        memory: bufferMemory,\n        verbose: true\n    });\n    console.log(\"✅ [CREATE_CHAIN] Conversation chain created successfully\");\n    console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting createConversationChain()\");\n    return chain;\n};\nasync function POST(req, { params }) {\n    console.log(\"\\uD83D\\uDE80 [POST] Starting POST request handling for chatId:\", params.chatId);\n    try {\n        // Parse the request body\n        const { prompt } = await req.json();\n        console.log(`📥 [POST] Received prompt: \"${prompt}\"`);\n        // Get user ID\n        const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_7__.getAuth)(req);\n        console.log(`👤 [POST] User ID: ${userId}`);\n        if (!userId) {\n            console.log(\"\\uD83D\\uDEAB [POST] Unauthorized access attempt\");\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(\"Unauthorized\", {\n                status: 401\n            });\n        }\n        // Rate limiting\n        const { success } = await (0,_lib_rate_limit__WEBPACK_IMPORTED_MODULE_6__.rateLimit)(req);\n        console.log(`🚦 [POST] Rate limit check result: ${success}`);\n        if (!success) {\n            console.log(\"\\uD83D\\uDED1 [POST] Rate limit exceeded\");\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(\"Rate limit exceeded\", {\n                status: 429\n            });\n        }\n        // Fetch companion data\n        console.log(`🔍 [POST] Fetching companion data for chatId: ${params.chatId}`);\n        const companion = await _lib_prismadb__WEBPACK_IMPORTED_MODULE_5__[\"default\"].companion.findUnique({\n            where: {\n                id: params.chatId\n            },\n            include: {\n                messages: true\n            }\n        });\n        if (!companion) {\n            console.log(\"❌ [POST] Companion not found\");\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(\"Companion not found\", {\n                status: 404\n            });\n        }\n        console.log(`✅ [POST] Companion found: ${companion.id}`);\n        // Process character description\n        const characterDescription = getCharacterDescription(companion.characterDescription);\n        console.log(`📝 [POST] Character description processed`);\n        // Initialize MemoryManager\n        console.log(\"\\uD83E\\uDDE0 [POST] Initializing MemoryManager\");\n        const memoryManager = await _lib_memory__WEBPACK_IMPORTED_MODULE_4__.MemoryManager.getInstance();\n        const companionKey = {\n            companionId: companion.id,\n            userId: userId\n        };\n        console.log(`🔑 [POST] CompanionKey created: ${JSON.stringify(companionKey)}`);\n        // Create or reuse conversation chain\n        let chain = conversationChains.get(params.chatId);\n        if (!chain) {\n            console.log(\"\\uD83C\\uDD95 [POST] Creating new conversation chain\");\n            const { bufferMemory } = await memoryManager.getMemoryManager(companionKey);\n            console.log(\"\\uD83D\\uDD27 [DEBUG] Obtained bufferMemory from MemoryManager\");\n            chain = createConversationChain(characterDescription, bufferMemory);\n            conversationChains.set(params.chatId, chain);\n            console.log(\"✅ [POST] New conversation chain created and stored\");\n        } else {\n            console.log(\"♻️ [POST] Reusing existing conversation chain\");\n        }\n        // Determine if long-term memory should be used\n        const messageCount = companion.messages.length;\n        console.log(`📊 [POST] Total message count: ${messageCount}`);\n        let relevantMemories = [];\n        if (messageCount >= 10) {\n            console.log(\"\\uD83D\\uDD0D [POST] Retrieving relevant long-term memories\");\n            relevantMemories = await memoryManager.getRelevantMemories(companionKey, prompt);\n            console.log(`📚 [POST] Retrieved ${relevantMemories.length} relevant memories`);\n        } else {\n            console.log(\"\\uD83D\\uDD0D [POST] Skipping long-term memory retrieval as message count is less than 10\");\n        }\n        // Generate AI response\n        console.log(\"\\uD83D\\uDCAC [POST] Generating AI response with prompt:\", prompt);\n        console.log(\"\\uD83D\\uDD27 [DEBUG] About to call chain.call()\");\n        const response = await chain.call({\n            input: prompt,\n            longTermHistory: relevantMemories.join(\"\\n\") || \"\"\n        });\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Received response from chain.call()\");\n        const aiMessage = response.response.trim();\n        console.log(`🤖 [POST] AI response generated: \"${aiMessage}\"`);\n        // Store user message in database\n        console.log(\"\\uD83D\\uDCBE [POST] Storing user message in database\");\n        await _lib_prismadb__WEBPACK_IMPORTED_MODULE_5__[\"default\"].message.create({\n            data: {\n                content: prompt,\n                role: \"user\",\n                userId: userId,\n                companionId: companion.id\n            }\n        });\n        // Store AI response in database\n        console.log(\"\\uD83D\\uDCBE [POST] Storing AI response in database\");\n        await _lib_prismadb__WEBPACK_IMPORTED_MODULE_5__[\"default\"].message.create({\n            data: {\n                content: aiMessage,\n                role: \"system\",\n                userId: userId,\n                companionId: companion.id\n            }\n        });\n        // Update the agent memory with the latest conversation\n        if (messageCount >= 10) {\n            console.log(\"\\uD83E\\uDDE0 [POST] Updating agent memory with latest conversation\");\n            await memoryManager.updateAgentMemory(companionKey, prompt, aiMessage);\n            console.log(\"✅ [POST] Agent memory updated\");\n        } else {\n            console.log(\"\\uD83E\\uDDE0 [POST] Skipping agent memory update as message count is less than 10\");\n        }\n        console.log(\"\\uD83C\\uDFC1 [POST] Request handling completed successfully\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            systemMessage: aiMessage\n        });\n    } catch (error) {\n        console.error(\"❌ [POST_ERROR] An error occurred during request processing:\");\n        if (error instanceof Error) {\n            console.error(`Error name: ${error.name}`);\n            console.error(`Error message: ${error.message}`);\n            console.error(`Error stack: ${error.stack}`);\n        } else {\n            console.error(\"Error details:\", JSON.stringify(error, null, 2));\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"An unexpected error occurred\",\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/chat/[chatId]/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/memory.ts":
/*!***************************!*\
  !*** ./src/lib/memory.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryManager: () => (/* binding */ MemoryManager)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _langchain_community_vectorstores_faiss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/community/vectorstores/faiss */ \"(rsc)/./node_modules/@langchain/community/vectorstores/faiss.js\");\n/* harmony import */ var _langchain_openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/openai */ \"(rsc)/./node_modules/@langchain/openai/index.js\");\n/* harmony import */ var langchain_experimental_generative_agents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! langchain/experimental/generative_agents */ \"(rsc)/./node_modules/langchain/experimental/generative_agents.js\");\n/* harmony import */ var langchain_retrievers_time_weighted__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! langchain/retrievers/time_weighted */ \"(rsc)/./node_modules/langchain/retrievers/time_weighted.js\");\n/* harmony import */ var langchain_memory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! langchain/memory */ \"(rsc)/./node_modules/langchain/memory.js\");\n// src/lib/memory.ts\n\n\n\n\n\n\n\nclass MemoryManager {\n    constructor(){\n        this.agentMemories = new Map();\n        this.bufferMemories = new Map();\n        console.log(\"\\uD83C\\uDFD7️ [MemoryManager] Constructor called\");\n        this.prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n        console.log(\"\\uD83D\\uDD0C [MemoryManager] PrismaClient initialized\");\n    }\n    static async getInstance() {\n        console.log(\"\\uD83D\\uDD0D [MemoryManager] getInstance called\");\n        if (!MemoryManager.instance) {\n            console.log(\"\\uD83C\\uDD95 [MemoryManager] Creating new MemoryManager instance\");\n            MemoryManager.instance = new MemoryManager();\n        } else {\n            console.log(\"♻️ [MemoryManager] Reusing existing MemoryManager instance\");\n        }\n        return MemoryManager.instance;\n    }\n    async getOrCreateAgentMemory(companionKey) {\n        const key = `${companionKey.userId}:${companionKey.companionId}`;\n        console.log(`🔧 [DEBUG] Entered getOrCreateAgentMemory() with key: ${key}`);\n        if (!this.agentMemories.has(key)) {\n            console.log(`🆕 [MemoryManager] Creating new GenerativeAgentMemory for ${key}`);\n            if (!process.env.OPENAI_API_KEY) {\n                console.error(\"❌ [ERROR] OPENAI_API_KEY is not set in environment variables\");\n                throw new Error(\"OPENAI_API_KEY is not set\");\n            } else {\n                console.log(\"✅ [INFO] OPENAI_API_KEY is set\");\n            }\n            console.log(\"\\uD83E\\uDD16 [MemoryManager] Creating ChatOpenAI instance\");\n            const llm = new _langchain_openai__WEBPACK_IMPORTED_MODULE_2__.ChatOpenAI({\n                modelName: \"gpt-4\",\n                temperature: 0.9,\n                openAIApiKey: process.env.OPENAI_API_KEY\n            });\n            console.log(\"\\uD83E\\uDD16 [MemoryManager] ChatOpenAI instance created\");\n            console.log(\"\\uD83E\\uDDE0 [MemoryManager] Creating OpenAIEmbeddings instance\");\n            const embeddings = new _langchain_openai__WEBPACK_IMPORTED_MODULE_2__.OpenAIEmbeddings({\n                apiKey: process.env.OPENAI_API_KEY\n            });\n            console.log(\"\\uD83E\\uDDE0 [MemoryManager] OpenAIEmbeddings instance created\");\n            // Retrieve previous messages to initialize the vector store\n            console.log(\"\\uD83D\\uDCD6 [MemoryManager] Retrieving latest history for vector store initialization\");\n            const previousMessages = await this.readLatestHistory(companionKey);\n            console.log(`📚 [MemoryManager] Retrieved ${previousMessages.length} previous messages`);\n            const initialTexts = previousMessages.length > 0 ? previousMessages : [\n                \"Initialize memory\"\n            ];\n            console.log(`📄 [MemoryManager] Initial texts for vector store: ${initialTexts.length} texts`);\n            console.log(\"\\uD83D\\uDCCA [MemoryManager] Creating FaissStore vector store\");\n            const vectorStore = await _langchain_community_vectorstores_faiss__WEBPACK_IMPORTED_MODULE_1__.FaissStore.fromTexts(initialTexts, initialTexts.map((_, idx)=>({\n                    id: idx + 1\n                })), embeddings);\n            console.log(\"\\uD83D\\uDCCA [MemoryManager] FaissStore vector store created\");\n            console.log(\"⏲️ [MemoryManager] Creating TimeWeightedVectorStoreRetriever\");\n            const memoryRetriever = new langchain_retrievers_time_weighted__WEBPACK_IMPORTED_MODULE_4__.TimeWeightedVectorStoreRetriever({\n                vectorStore,\n                otherScoreKeys: [\n                    \"importance\"\n                ],\n                k: 15\n            });\n            console.log(\"⏲️ [MemoryManager] TimeWeightedVectorStoreRetriever created\");\n            console.log(\"\\uD83E\\uDDE0 [MemoryManager] Creating GenerativeAgentMemory instance\");\n            const agentMemory = new langchain_experimental_generative_agents__WEBPACK_IMPORTED_MODULE_3__.GenerativeAgentMemory(llm, memoryRetriever, {\n                reflectionThreshold: 8,\n                importanceWeight: 0.15,\n                verbose: true,\n                maxTokensLimit: 1200\n            });\n            console.log(\"\\uD83E\\uDDE0 [MemoryManager] GenerativeAgentMemory instance created\");\n            this.agentMemories.set(key, agentMemory);\n            console.log(`✅ [MemoryManager] New GenerativeAgentMemory stored for key: ${key}`);\n        } else {\n            console.log(`♻️ [MemoryManager] Reusing existing GenerativeAgentMemory for key: ${key}`);\n        }\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting getOrCreateAgentMemory()\");\n        return this.agentMemories.get(key);\n    }\n    getOrCreateBufferMemory(companionKey) {\n        const key = `${companionKey.userId}:${companionKey.companionId}`;\n        console.log(`🔧 [DEBUG] Entered getOrCreateBufferMemory() with key: ${key}`);\n        if (!this.bufferMemories.has(key)) {\n            console.log(`🆕 [MemoryManager] Creating new BufferMemory for ${key}`);\n            const bufferMemory = new langchain_memory__WEBPACK_IMPORTED_MODULE_5__.BufferMemory({\n                returnMessages: true,\n                memoryKey: \"shortTermHistory\"\n            });\n            this.bufferMemories.set(key, bufferMemory);\n            console.log(`✅ [MemoryManager] New BufferMemory stored for key: ${key}`);\n        } else {\n            console.log(`♻️ [MemoryManager] Reusing existing BufferMemory for key: ${key}`);\n        }\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting getOrCreateBufferMemory()\");\n        return this.bufferMemories.get(key);\n    }\n    async addMemory(companionKey, text) {\n        console.log(`🔧 [DEBUG] Entered addMemory() for key: ${companionKey.companionId}`);\n        console.log(`📝 [MemoryManager] Memory content: \"${text.substring(0, 50)}...\"`);\n        try {\n            const agentMemory = await this.getOrCreateAgentMemory(companionKey);\n            await agentMemory.addMemory(text, new Date());\n            console.log(`✅ [MemoryManager] Memory added to GenerativeAgentMemory`);\n        } catch (error) {\n            console.error(`❌ [MemoryManager] Error adding memory to agentMemory:`, error);\n        }\n        try {\n            await this.prisma.message.create({\n                data: {\n                    content: text,\n                    userId: companionKey.userId,\n                    companionId: companionKey.companionId,\n                    role: \"user\"\n                }\n            });\n            console.log(`💾 [MemoryManager] Memory stored in Prisma database`);\n        } catch (error) {\n            console.error(`❌ [MemoryManager] Error storing memory in Prisma:`, error);\n        }\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting addMemory()\");\n    }\n    async updateAgentMemory(companionKey, userInput, aiResponse) {\n        console.log(`🔧 [DEBUG] Entered updateAgentMemory() for key: ${companionKey.companionId}`);\n        console.log(`👤 [MemoryManager] User input: \"${userInput}\"`);\n        console.log(`🤖 [MemoryManager] AI response: \"${aiResponse}\"`);\n        try {\n            const agentMemory = await this.getOrCreateAgentMemory(companionKey);\n            await agentMemory.addMemory(`User: ${userInput}`, new Date());\n            await agentMemory.addMemory(`Assistant: ${aiResponse}`, new Date());\n            console.log(`✅ [MemoryManager] Agent memory updated with latest conversation`);\n        } catch (error) {\n            console.error(`❌ [MemoryManager] Error updating agent memory:`, error);\n        }\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting updateAgentMemory()\");\n    }\n    async getRelevantMemories(companionKey, query) {\n        console.log(`🔧 [DEBUG] Entered getRelevantMemories() for key: ${companionKey.companionId}`);\n        console.log(`📝 [MemoryManager] Query: \"${query}\"`);\n        try {\n            const agentMemory = await this.getOrCreateAgentMemory(companionKey);\n            console.log(`🧠 [MemoryManager] Retrieved agent memory for companion`);\n            const relevantMemories = await agentMemory.memoryRetriever.getRelevantDocuments(query);\n            console.log(`✅ [MemoryManager] Retrieved ${relevantMemories.length} relevant memories`);\n            relevantMemories.forEach((mem, index)=>{\n                console.log(`📎 [MemoryManager] Memory ${index + 1}: \"${mem.pageContent.substring(0, 50)}...\"`);\n            });\n            console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting getRelevantMemories()\");\n            return relevantMemories.map((mem)=>mem.pageContent);\n        } catch (error) {\n            console.error(`❌ [MemoryManager] Error retrieving relevant memories:`, error);\n            console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting getRelevantMemories() with error\");\n            return [];\n        }\n    }\n    async readLatestHistory(companionKey) {\n        console.log(`🔧 [DEBUG] Entered readLatestHistory() for key: ${companionKey.companionId}`);\n        try {\n            const messages = await this.prisma.message.findMany({\n                where: {\n                    userId: companionKey.userId,\n                    companionId: companionKey.companionId\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                },\n                take: 30\n            });\n            console.log(`✅ [MemoryManager] Retrieved ${messages.length} messages from database`);\n            messages.forEach((msg, index)=>{\n                console.log(`📄 [MemoryManager] Message ${index + 1}: \"${msg.content.substring(0, 50)}...\"`);\n            });\n            console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting readLatestHistory()\");\n            return messages.map((msg)=>msg.content);\n        } catch (error) {\n            console.error(`❌ [MemoryManager] Error retrieving latest history:`, error);\n            console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting readLatestHistory() with error\");\n            return [];\n        }\n    }\n    async seedChatHistory(seed, delimiter, companionKey) {\n        console.log(`🔧 [DEBUG] Entered seedChatHistory() for key: ${companionKey.companionId}`);\n        console.log(`🌱 [MemoryManager] Seed text length: ${seed.length}`);\n        const messages = seed.split(delimiter);\n        console.log(`📊 [MemoryManager] Seeding ${messages.length} messages`);\n        for (const message of messages){\n            await this.addMemory(companionKey, message);\n            console.log(`➕ [MemoryManager] Seeded message: \"${message.substring(0, 50)}...\"`);\n        }\n        console.log(`✅ [MemoryManager] Chat history seeding completed`);\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting seedChatHistory()\");\n    }\n    async clearHistory(companionKey) {\n        console.log(`🔧 [DEBUG] Entered clearHistory() for key: ${companionKey.companionId}`);\n        if (!companionKey.userId) {\n            console.error(`❌ [MemoryManager] Companion key set incorrectly`);\n            console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting clearHistory() due to invalid companionKey\");\n            return;\n        }\n        try {\n            const deleteResult = await this.prisma.message.deleteMany({\n                where: {\n                    userId: companionKey.userId,\n                    companionId: companionKey.companionId\n                }\n            });\n            console.log(`🗑️ [MemoryManager] Deleted ${deleteResult.count} messages from database`);\n            const key = `${companionKey.userId}:${companionKey.companionId}`;\n            this.agentMemories.delete(key);\n            this.bufferMemories.delete(key);\n            console.log(`🧹 [MemoryManager] Cleared vector store and buffer memory for key: ${key}`);\n            console.log(`✅ [MemoryManager] Chat history cleared successfully`);\n        } catch (error) {\n            console.error(`❌ [MemoryManager] Error clearing chat history:`, error);\n        }\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting clearHistory()\");\n    }\n    async getMemoryManager(companionKey) {\n        console.log(`🔧 [DEBUG] Entered getMemoryManager() for key: ${companionKey.companionId}`);\n        const bufferMemory = this.getOrCreateBufferMemory(companionKey);\n        console.log(`✅ [MemoryManager] BufferMemory retrieved for key: ${companionKey.companionId}`);\n        console.log(\"\\uD83D\\uDD27 [DEBUG] Exiting getMemoryManager()\");\n        return {\n            bufferMemory\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/memory.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prismadb.ts":
/*!*****************************!*\
  !*** ./src/lib/prismadb.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/extension-accelerate */ \"(rsc)/./node_modules/@prisma/extension-accelerate/dist/esm/entry.node.js\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dotenv */ \"(rsc)/./node_modules/dotenv/lib/main.js\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n// src/lib/prismadb.ts\n\n\n\n\n// Load the .env.local file\ndotenv__WEBPACK_IMPORTED_MODULE_2___default().config({\n    path: path__WEBPACK_IMPORTED_MODULE_3___default().resolve(__dirname, \"../../.env.local\")\n});\nconst prismaClientSingleton = ()=>{\n    return new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient().$extends((0,_prisma_extension_accelerate__WEBPACK_IMPORTED_MODULE_1__.withAccelerate)());\n};\nconst prisma = global.prismaGlobal ?? prismaClientSingleton();\nif (true) global.prismaGlobal = prisma;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYWRiLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsc0JBQXNCO0FBRXdCO0FBQ2dCO0FBQ2xDO0FBQ0o7QUFFeEIsMkJBQTJCO0FBQzNCRSxvREFBYSxDQUFDO0lBQUVDLE1BQU1BLG1EQUFZLENBQUNHLFdBQVc7QUFBb0I7QUFFbEUsTUFBTUMsd0JBQXdCO0lBQzVCLE9BQU8sSUFBSVAsd0RBQVlBLEdBQUdRLFFBQVEsQ0FBQ1AsNEVBQWNBO0FBQ25EO0FBT0EsTUFBTVEsU0FBU0MsT0FBT0MsWUFBWSxJQUFJSjtBQUV0QyxJQUFJSyxJQUF5QixFQUFjRixPQUFPQyxZQUFZLEdBQUdGO0FBRWpFLGlFQUFlQSxNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vc3JjL2xpYi9wcmlzbWFkYi50cz85ZmVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvcHJpc21hZGIudHNcclxuXHJcbmltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcclxuaW1wb3J0IHsgd2l0aEFjY2VsZXJhdGUgfSBmcm9tICdAcHJpc21hL2V4dGVuc2lvbi1hY2NlbGVyYXRlJztcclxuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuXHJcbi8vIExvYWQgdGhlIC5lbnYubG9jYWwgZmlsZVxyXG5kb3RlbnYuY29uZmlnKHsgcGF0aDogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uLy4uLy5lbnYubG9jYWwnKSB9KTtcclxuXHJcbmNvbnN0IHByaXNtYUNsaWVudFNpbmdsZXRvbiA9ICgpID0+IHtcclxuICByZXR1cm4gbmV3IFByaXNtYUNsaWVudCgpLiRleHRlbmRzKHdpdGhBY2NlbGVyYXRlKCkpO1xyXG59XHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgLy8gRXh0ZW5kaW5nIHRoZSBOb2RlSlMgZ2xvYmFsIGludGVyZmFjZVxyXG4gIHZhciBwcmlzbWFHbG9iYWw6IFJldHVyblR5cGU8dHlwZW9mIHByaXNtYUNsaWVudFNpbmdsZXRvbj4gfCB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbmNvbnN0IHByaXNtYSA9IGdsb2JhbC5wcmlzbWFHbG9iYWwgPz8gcHJpc21hQ2xpZW50U2luZ2xldG9uKCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsLnByaXNtYUdsb2JhbCA9IHByaXNtYTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHByaXNtYTtcclxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsIndpdGhBY2NlbGVyYXRlIiwiZG90ZW52IiwicGF0aCIsImNvbmZpZyIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJwcmlzbWFDbGllbnRTaW5nbGV0b24iLCIkZXh0ZW5kcyIsInByaXNtYSIsImdsb2JhbCIsInByaXNtYUdsb2JhbCIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prismadb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/rate-limit.ts":
/*!*******************************!*\
  !*** ./src/lib/rate-limit.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkApiLimit: () => (/* binding */ checkApiLimit),\n/* harmony export */   getApiLimitCount: () => (/* binding */ getApiLimitCount),\n/* harmony export */   increaseApiLimit: () => (/* binding */ increaseApiLimit),\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit)\n/* harmony export */ });\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _prismadb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prismadb */ \"(rsc)/./src/lib/prismadb.ts\");\n//C:\\AI_src\\Companion_UI\\SaaS-AI-Companion\\src\\lib\\rate-limit.ts\n\n\nconst MAX_FREE_COUNTS = parseInt(process.env.MAX_FREE_COUNTS || \"1000\", 10);\nconst increaseApiLimit = async (req)=>{\n    const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_1__.getAuth)(req);\n    if (!userId) {\n        return;\n    }\n    try {\n        const userApiLimit = await _prismadb__WEBPACK_IMPORTED_MODULE_0__[\"default\"].userApiLimit.findUnique({\n            where: {\n                userId\n            }\n        });\n        if (userApiLimit) {\n            await _prismadb__WEBPACK_IMPORTED_MODULE_0__[\"default\"].userApiLimit.update({\n                where: {\n                    userId\n                },\n                data: {\n                    count: userApiLimit.count + 1\n                }\n            });\n        } else {\n            await _prismadb__WEBPACK_IMPORTED_MODULE_0__[\"default\"].userApiLimit.create({\n                data: {\n                    userId,\n                    count: 1\n                }\n            });\n        }\n    } catch (error) {\n        console.error(\"Error increasing API limit:\", error);\n    }\n};\nconst checkApiLimit = async (req)=>{\n    const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_1__.getAuth)(req);\n    if (!userId) {\n        return false;\n    }\n    try {\n        const userApiLimit = await _prismadb__WEBPACK_IMPORTED_MODULE_0__[\"default\"].userApiLimit.findUnique({\n            where: {\n                userId\n            }\n        });\n        return !userApiLimit || userApiLimit.count < MAX_FREE_COUNTS;\n    } catch (error) {\n        console.error(\"Error checking API limit:\", error);\n        return false;\n    }\n};\nconst getApiLimitCount = async (req)=>{\n    const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_1__.getAuth)(req);\n    if (!userId) {\n        return 0;\n    }\n    try {\n        const userApiLimit = await _prismadb__WEBPACK_IMPORTED_MODULE_0__[\"default\"].userApiLimit.findUnique({\n            where: {\n                userId\n            }\n        });\n        return userApiLimit ? userApiLimit.count : 0;\n    } catch (error) {\n        console.error(\"Error getting API limit count:\", error);\n        return 0;\n    }\n};\n// Add this function\nconst rateLimit = async (req)=>{\n    const isWithinLimit = await checkApiLimit(req);\n    if (isWithinLimit) {\n        await increaseApiLimit(req);\n        return {\n            success: true\n        };\n    } else {\n        return {\n            success: false\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3JhdGUtbGltaXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsZ0VBQWdFO0FBRWpCO0FBQ2I7QUFHbEMsTUFBTUUsa0JBQWtCQyxTQUFTQyxRQUFRQyxHQUFHLENBQUNILGVBQWUsSUFBSSxRQUFRO0FBRWpFLE1BQU1JLG1CQUFtQixPQUFPQztJQUNyQyxNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHUiw2REFBT0EsQ0FBQ087SUFFM0IsSUFBSSxDQUFDQyxRQUFRO1FBQ1g7SUFDRjtJQUVBLElBQUk7UUFDRixNQUFNQyxlQUFlLE1BQU1SLGlEQUFRQSxDQUFDUSxZQUFZLENBQUNDLFVBQVUsQ0FBQztZQUMxREMsT0FBTztnQkFBRUg7WUFBTztRQUNsQjtRQUVBLElBQUlDLGNBQWM7WUFDaEIsTUFBTVIsaURBQVFBLENBQUNRLFlBQVksQ0FBQ0csTUFBTSxDQUFDO2dCQUNqQ0QsT0FBTztvQkFBRUg7Z0JBQU87Z0JBQ2hCSyxNQUFNO29CQUFFQyxPQUFPTCxhQUFhSyxLQUFLLEdBQUc7Z0JBQUU7WUFDeEM7UUFDRixPQUFPO1lBQ0wsTUFBTWIsaURBQVFBLENBQUNRLFlBQVksQ0FBQ00sTUFBTSxDQUFDO2dCQUNqQ0YsTUFBTTtvQkFBRUw7b0JBQVFNLE9BQU87Z0JBQUU7WUFDM0I7UUFDRjtJQUNGLEVBQUUsT0FBT0UsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtJQUMvQztBQUNGLEVBQUU7QUFFSyxNQUFNRSxnQkFBZ0IsT0FBT1g7SUFDbEMsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR1IsNkRBQU9BLENBQUNPO0lBRTNCLElBQUksQ0FBQ0MsUUFBUTtRQUNYLE9BQU87SUFDVDtJQUVBLElBQUk7UUFDRixNQUFNQyxlQUFlLE1BQU1SLGlEQUFRQSxDQUFDUSxZQUFZLENBQUNDLFVBQVUsQ0FBQztZQUMxREMsT0FBTztnQkFBRUg7WUFBTztRQUNsQjtRQUVBLE9BQU8sQ0FBQ0MsZ0JBQWdCQSxhQUFhSyxLQUFLLEdBQUdaO0lBQy9DLEVBQUUsT0FBT2MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNkJBQTZCQTtRQUMzQyxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUssTUFBTUcsbUJBQW1CLE9BQU9aO0lBQ3JDLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdSLDZEQUFPQSxDQUFDTztJQUUzQixJQUFJLENBQUNDLFFBQVE7UUFDWCxPQUFPO0lBQ1Q7SUFFQSxJQUFJO1FBQ0YsTUFBTUMsZUFBZSxNQUFNUixpREFBUUEsQ0FBQ1EsWUFBWSxDQUFDQyxVQUFVLENBQUM7WUFDMURDLE9BQU87Z0JBQUVIO1lBQU87UUFDbEI7UUFFQSxPQUFPQyxlQUFlQSxhQUFhSyxLQUFLLEdBQUc7SUFDN0MsRUFBRSxPQUFPRSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxrQ0FBa0NBO1FBQ2hELE9BQU87SUFDVDtBQUNGLEVBQUU7QUFFRixvQkFBb0I7QUFDYixNQUFNSSxZQUFZLE9BQU9iO0lBQzlCLE1BQU1jLGdCQUFnQixNQUFNSCxjQUFjWDtJQUMxQyxJQUFJYyxlQUFlO1FBQ2pCLE1BQU1mLGlCQUFpQkM7UUFDdkIsT0FBTztZQUFFZSxTQUFTO1FBQUs7SUFDekIsT0FBTztRQUNMLE9BQU87WUFBRUEsU0FBUztRQUFNO0lBQzFCO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLWNvbXBhbmlvbi8uL3NyYy9saWIvcmF0ZS1saW1pdC50cz84Yzc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vQzpcXEFJX3NyY1xcQ29tcGFuaW9uX1VJXFxTYWFTLUFJLUNvbXBhbmlvblxcc3JjXFxsaWJcXHJhdGUtbGltaXQudHNcclxuXHJcbmltcG9ydCB7IGdldEF1dGggfSBmcm9tIFwiQGNsZXJrL25leHRqcy9zZXJ2ZXJcIjtcclxuaW1wb3J0IHByaXNtYWRiIGZyb20gXCIuL3ByaXNtYWRiXCI7XHJcbmltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcclxuXHJcbmNvbnN0IE1BWF9GUkVFX0NPVU5UUyA9IHBhcnNlSW50KHByb2Nlc3MuZW52Lk1BWF9GUkVFX0NPVU5UUyB8fCBcIjEwMDBcIiwgMTApO1xyXG5cclxuZXhwb3J0IGNvbnN0IGluY3JlYXNlQXBpTGltaXQgPSBhc3luYyAocmVxOiBOZXh0UmVxdWVzdCk6IFByb21pc2U8dm9pZD4gPT4ge1xyXG4gIGNvbnN0IHsgdXNlcklkIH0gPSBnZXRBdXRoKHJlcSk7XHJcblxyXG4gIGlmICghdXNlcklkKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlckFwaUxpbWl0ID0gYXdhaXQgcHJpc21hZGIudXNlckFwaUxpbWl0LmZpbmRVbmlxdWUoe1xyXG4gICAgICB3aGVyZTogeyB1c2VySWQgfSxcclxuICAgIH0pO1xyXG5cclxuICAgIGlmICh1c2VyQXBpTGltaXQpIHtcclxuICAgICAgYXdhaXQgcHJpc21hZGIudXNlckFwaUxpbWl0LnVwZGF0ZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgdXNlcklkIH0sXHJcbiAgICAgICAgZGF0YTogeyBjb3VudDogdXNlckFwaUxpbWl0LmNvdW50ICsgMSB9LFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGF3YWl0IHByaXNtYWRiLnVzZXJBcGlMaW1pdC5jcmVhdGUoe1xyXG4gICAgICAgIGRhdGE6IHsgdXNlcklkLCBjb3VudDogMSB9LFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGluY3JlYXNpbmcgQVBJIGxpbWl0OlwiLCBlcnJvcik7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNoZWNrQXBpTGltaXQgPSBhc3luYyAocmVxOiBOZXh0UmVxdWVzdCk6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xyXG4gIGNvbnN0IHsgdXNlcklkIH0gPSBnZXRBdXRoKHJlcSk7XHJcblxyXG4gIGlmICghdXNlcklkKSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlckFwaUxpbWl0ID0gYXdhaXQgcHJpc21hZGIudXNlckFwaUxpbWl0LmZpbmRVbmlxdWUoe1xyXG4gICAgICB3aGVyZTogeyB1c2VySWQgfSxcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiAhdXNlckFwaUxpbWl0IHx8IHVzZXJBcGlMaW1pdC5jb3VudCA8IE1BWF9GUkVFX0NPVU5UUztcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNoZWNraW5nIEFQSSBsaW1pdDpcIiwgZXJyb3IpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRBcGlMaW1pdENvdW50ID0gYXN5bmMgKHJlcTogTmV4dFJlcXVlc3QpOiBQcm9taXNlPG51bWJlcj4gPT4ge1xyXG4gIGNvbnN0IHsgdXNlcklkIH0gPSBnZXRBdXRoKHJlcSk7XHJcblxyXG4gIGlmICghdXNlcklkKSB7XHJcbiAgICByZXR1cm4gMDtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB1c2VyQXBpTGltaXQgPSBhd2FpdCBwcmlzbWFkYi51c2VyQXBpTGltaXQuZmluZFVuaXF1ZSh7XHJcbiAgICAgIHdoZXJlOiB7IHVzZXJJZCB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHVzZXJBcGlMaW1pdCA/IHVzZXJBcGlMaW1pdC5jb3VudCA6IDA7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBnZXR0aW5nIEFQSSBsaW1pdCBjb3VudDpcIiwgZXJyb3IpO1xyXG4gICAgcmV0dXJuIDA7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gQWRkIHRoaXMgZnVuY3Rpb25cclxuZXhwb3J0IGNvbnN0IHJhdGVMaW1pdCA9IGFzeW5jIChyZXE6IE5leHRSZXF1ZXN0KSA9PiB7XHJcbiAgY29uc3QgaXNXaXRoaW5MaW1pdCA9IGF3YWl0IGNoZWNrQXBpTGltaXQocmVxKTtcclxuICBpZiAoaXNXaXRoaW5MaW1pdCkge1xyXG4gICAgYXdhaXQgaW5jcmVhc2VBcGlMaW1pdChyZXEpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSB9O1xyXG4gIH1cclxufTtcclxuIl0sIm5hbWVzIjpbImdldEF1dGgiLCJwcmlzbWFkYiIsIk1BWF9GUkVFX0NPVU5UUyIsInBhcnNlSW50IiwicHJvY2VzcyIsImVudiIsImluY3JlYXNlQXBpTGltaXQiLCJyZXEiLCJ1c2VySWQiLCJ1c2VyQXBpTGltaXQiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJ1cGRhdGUiLCJkYXRhIiwiY291bnQiLCJjcmVhdGUiLCJlcnJvciIsImNvbnNvbGUiLCJjaGVja0FwaUxpbWl0IiwiZ2V0QXBpTGltaXRDb3VudCIsInJhdGVMaW1pdCIsImlzV2l0aGluTGltaXQiLCJzdWNjZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/rate-limit.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@clerk","vendor-chunks/crypto-js","vendor-chunks/tslib","vendor-chunks/@prisma","vendor-chunks/dotenv","vendor-chunks/ms","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case","vendor-chunks/formdata-node","vendor-chunks/@langchain","vendor-chunks/langchain","vendor-chunks/openai","vendor-chunks/semver","vendor-chunks/zod-to-json-schema","vendor-chunks/langsmith","vendor-chunks/form-data-encoder","vendor-chunks/uuid","vendor-chunks/whatwg-url","vendor-chunks/agentkeepalive","vendor-chunks/retry","vendor-chunks/p-queue","vendor-chunks/js-tiktoken","vendor-chunks/tr46","vendor-chunks/zod","vendor-chunks/node-fetch","vendor-chunks/mustache","vendor-chunks/js-yaml","vendor-chunks/webidl-conversions","vendor-chunks/web-streams-polyfill","vendor-chunks/p-timeout","vendor-chunks/p-retry","vendor-chunks/p-finally","vendor-chunks/humanize-ms","vendor-chunks/eventemitter3","vendor-chunks/event-target-shim","vendor-chunks/decamelize","vendor-chunks/camelcase","vendor-chunks/base64-js","vendor-chunks/ansi-styles","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&page=%2Fapi%2Fchat%2F%5BchatId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2F%5BchatId%5D%2Froute.ts&appDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI_src%5CCompanion_UI%5CSaaS-AI-Companion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();