"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/livekit-server-sdk";
exports.ids = ["vendor-chunks/livekit-server-sdk"];
exports.modules = {

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js":
/*!*************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/AccessToken.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   TokenVerifier: () => (/* binding */ TokenVerifier)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/verify.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n// 6 hours\nconst defaultTTL = `6h`;\nclass AccessToken {\n    /**\n     * Creates a new AccessToken\n     * @param apiKey API Key, can be set in env LIVEKIT_API_KEY\n     * @param apiSecret Secret, can be set in env LIVEKIT_API_SECRET\n     */\n    constructor(apiKey, apiSecret, options) {\n        if (!apiKey) {\n            apiKey = process.env.LIVEKIT_API_KEY;\n        }\n        if (!apiSecret) {\n            apiSecret = process.env.LIVEKIT_API_SECRET;\n        }\n        if (!apiKey || !apiSecret) {\n            throw Error('api-key and api-secret must be set');\n        }\n        else if (typeof document !== 'undefined') {\n            // check against document rather than window because deno provides window\n            console.error('You should not include your API secret in your web client bundle.\\n\\n' +\n                'Your web client should request a token from your backend server which should then use ' +\n                'the API secret to generate a token. See https://docs.livekit.io/client/connect/');\n        }\n        this.apiKey = apiKey;\n        this.apiSecret = apiSecret;\n        this.grants = {};\n        this.identity = options === null || options === void 0 ? void 0 : options.identity;\n        this.ttl = (options === null || options === void 0 ? void 0 : options.ttl) || defaultTTL;\n        if (typeof this.ttl === 'number') {\n            this.ttl = `${this.ttl}s`;\n        }\n        if (options === null || options === void 0 ? void 0 : options.metadata) {\n            this.metadata = options.metadata;\n        }\n        if (options === null || options === void 0 ? void 0 : options.name) {\n            this.name = options.name;\n        }\n    }\n    /**\n     * Adds a video grant to this token.\n     * @param grant -\n     */\n    addGrant(grant) {\n        var _a;\n        this.grants.video = Object.assign(Object.assign({}, ((_a = this.grants.video) !== null && _a !== void 0 ? _a : {})), grant);\n    }\n    /**\n     * Adds a SIP grant to this token.\n     * @param grant -\n     */\n    addSIPGrant(grant) {\n        var _a;\n        this.grants.sip = Object.assign(Object.assign({}, ((_a = this.grants.sip) !== null && _a !== void 0 ? _a : {})), grant);\n    }\n    get name() {\n        return this.grants.name;\n    }\n    set name(name) {\n        this.grants.name = name;\n    }\n    get metadata() {\n        return this.grants.metadata;\n    }\n    /**\n     * Set metadata to be passed to the Participant, used only when joining the room\n     */\n    set metadata(md) {\n        this.grants.metadata = md;\n    }\n    get attributes() {\n        return this.grants.attributes;\n    }\n    set attributes(attrs) {\n        this.grants.attributes = attrs;\n    }\n    get kind() {\n        return this.grants.kind;\n    }\n    set kind(kind) {\n        this.grants.kind = kind;\n    }\n    get sha256() {\n        return this.grants.sha256;\n    }\n    set sha256(sha) {\n        this.grants.sha256 = sha;\n    }\n    /**\n     * @returns JWT encoded token\n     */\n    async toJwt() {\n        // TODO: check for video grant validity\n        var _a;\n        const secret = new TextEncoder().encode(this.apiSecret);\n        const jwt = new jose__WEBPACK_IMPORTED_MODULE_1__.SignJWT((0,_grants_js__WEBPACK_IMPORTED_MODULE_0__.claimsToJwtPayload)(this.grants))\n            .setProtectedHeader({ alg: 'HS256' })\n            .setIssuer(this.apiKey)\n            .setExpirationTime(this.ttl)\n            .setNotBefore(0);\n        if (this.identity) {\n            jwt.setSubject(this.identity);\n        }\n        else if ((_a = this.grants.video) === null || _a === void 0 ? void 0 : _a.roomJoin) {\n            throw Error('identity is required for join but not set');\n        }\n        return jwt.sign(secret);\n    }\n}\nclass TokenVerifier {\n    constructor(apiKey, apiSecret) {\n        this.apiKey = apiKey;\n        this.apiSecret = apiSecret;\n    }\n    async verify(token) {\n        const secret = new TextEncoder().encode(this.apiSecret);\n        const { payload } = await jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify(token, secret, { issuer: this.apiKey });\n        if (!payload) {\n            throw Error('invalid token');\n        }\n        return payload;\n    }\n}\n//# sourceMappingURL=AccessToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWNjZXNzVG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDNkI7QUFDb0I7QUFDakQ7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFNBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCwrREFBK0Q7QUFDekg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsNkRBQTZEO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUNBQVksQ0FBQyw4REFBa0I7QUFDdkQsa0NBQWtDLGNBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsVUFBVSxRQUFRLDJDQUFjLGtCQUFrQixxQkFBcUI7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1jb21wYW5pb24vLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWNjZXNzVG9rZW4uanM/ODdjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDI0IExpdmVLaXQsIEluYy5cbi8vXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuaW1wb3J0ICogYXMgam9zZSBmcm9tICdqb3NlJztcbmltcG9ydCB7IGNsYWltc1RvSnd0UGF5bG9hZCB9IGZyb20gJy4vZ3JhbnRzLmpzJztcbi8vIDYgaG91cnNcbmNvbnN0IGRlZmF1bHRUVEwgPSBgNmhgO1xuZXhwb3J0IGNsYXNzIEFjY2Vzc1Rva2VuIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IEFjY2Vzc1Rva2VuXG4gICAgICogQHBhcmFtIGFwaUtleSBBUEkgS2V5LCBjYW4gYmUgc2V0IGluIGVudiBMSVZFS0lUX0FQSV9LRVlcbiAgICAgKiBAcGFyYW0gYXBpU2VjcmV0IFNlY3JldCwgY2FuIGJlIHNldCBpbiBlbnYgTElWRUtJVF9BUElfU0VDUkVUXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFhcGlLZXkpIHtcbiAgICAgICAgICAgIGFwaUtleSA9IHByb2Nlc3MuZW52LkxJVkVLSVRfQVBJX0tFWTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFwaVNlY3JldCkge1xuICAgICAgICAgICAgYXBpU2VjcmV0ID0gcHJvY2Vzcy5lbnYuTElWRUtJVF9BUElfU0VDUkVUO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYXBpS2V5IHx8ICFhcGlTZWNyZXQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdhcGkta2V5IGFuZCBhcGktc2VjcmV0IG11c3QgYmUgc2V0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgLy8gY2hlY2sgYWdhaW5zdCBkb2N1bWVudCByYXRoZXIgdGhhbiB3aW5kb3cgYmVjYXVzZSBkZW5vIHByb3ZpZGVzIHdpbmRvd1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignWW91IHNob3VsZCBub3QgaW5jbHVkZSB5b3VyIEFQSSBzZWNyZXQgaW4geW91ciB3ZWIgY2xpZW50IGJ1bmRsZS5cXG5cXG4nICtcbiAgICAgICAgICAgICAgICAnWW91ciB3ZWIgY2xpZW50IHNob3VsZCByZXF1ZXN0IGEgdG9rZW4gZnJvbSB5b3VyIGJhY2tlbmQgc2VydmVyIHdoaWNoIHNob3VsZCB0aGVuIHVzZSAnICtcbiAgICAgICAgICAgICAgICAndGhlIEFQSSBzZWNyZXQgdG8gZ2VuZXJhdGUgYSB0b2tlbi4gU2VlIGh0dHBzOi8vZG9jcy5saXZla2l0LmlvL2NsaWVudC9jb25uZWN0LycpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgICAgICB0aGlzLmFwaVNlY3JldCA9IGFwaVNlY3JldDtcbiAgICAgICAgdGhpcy5ncmFudHMgPSB7fTtcbiAgICAgICAgdGhpcy5pZGVudGl0eSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5pZGVudGl0eTtcbiAgICAgICAgdGhpcy50dGwgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnR0bCkgfHwgZGVmYXVsdFRUTDtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnR0bCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHRoaXMudHRsID0gYCR7dGhpcy50dGx9c2A7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5tZXRhZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5tZXRhZGF0YSA9IG9wdGlvbnMubWV0YWRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5uYW1lKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBvcHRpb25zLm5hbWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBhIHZpZGVvIGdyYW50IHRvIHRoaXMgdG9rZW4uXG4gICAgICogQHBhcmFtIGdyYW50IC1cbiAgICAgKi9cbiAgICBhZGRHcmFudChncmFudCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMuZ3JhbnRzLnZpZGVvID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCAoKF9hID0gdGhpcy5ncmFudHMudmlkZW8pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9KSksIGdyYW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBhIFNJUCBncmFudCB0byB0aGlzIHRva2VuLlxuICAgICAqIEBwYXJhbSBncmFudCAtXG4gICAgICovXG4gICAgYWRkU0lQR3JhbnQoZ3JhbnQpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLmdyYW50cy5zaXAgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sICgoX2EgPSB0aGlzLmdyYW50cy5zaXApICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9KSksIGdyYW50KTtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyYW50cy5uYW1lO1xuICAgIH1cbiAgICBzZXQgbmFtZShuYW1lKSB7XG4gICAgICAgIHRoaXMuZ3JhbnRzLm5hbWUgPSBuYW1lO1xuICAgIH1cbiAgICBnZXQgbWV0YWRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyYW50cy5tZXRhZGF0YTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IG1ldGFkYXRhIHRvIGJlIHBhc3NlZCB0byB0aGUgUGFydGljaXBhbnQsIHVzZWQgb25seSB3aGVuIGpvaW5pbmcgdGhlIHJvb21cbiAgICAgKi9cbiAgICBzZXQgbWV0YWRhdGEobWQpIHtcbiAgICAgICAgdGhpcy5ncmFudHMubWV0YWRhdGEgPSBtZDtcbiAgICB9XG4gICAgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyYW50cy5hdHRyaWJ1dGVzO1xuICAgIH1cbiAgICBzZXQgYXR0cmlidXRlcyhhdHRycykge1xuICAgICAgICB0aGlzLmdyYW50cy5hdHRyaWJ1dGVzID0gYXR0cnM7XG4gICAgfVxuICAgIGdldCBraW5kKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ncmFudHMua2luZDtcbiAgICB9XG4gICAgc2V0IGtpbmQoa2luZCkge1xuICAgICAgICB0aGlzLmdyYW50cy5raW5kID0ga2luZDtcbiAgICB9XG4gICAgZ2V0IHNoYTI1NigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JhbnRzLnNoYTI1NjtcbiAgICB9XG4gICAgc2V0IHNoYTI1NihzaGEpIHtcbiAgICAgICAgdGhpcy5ncmFudHMuc2hhMjU2ID0gc2hhO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBKV1QgZW5jb2RlZCB0b2tlblxuICAgICAqL1xuICAgIGFzeW5jIHRvSnd0KCkge1xuICAgICAgICAvLyBUT0RPOiBjaGVjayBmb3IgdmlkZW8gZ3JhbnQgdmFsaWRpdHlcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCBzZWNyZXQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodGhpcy5hcGlTZWNyZXQpO1xuICAgICAgICBjb25zdCBqd3QgPSBuZXcgam9zZS5TaWduSldUKGNsYWltc1RvSnd0UGF5bG9hZCh0aGlzLmdyYW50cykpXG4gICAgICAgICAgICAuc2V0UHJvdGVjdGVkSGVhZGVyKHsgYWxnOiAnSFMyNTYnIH0pXG4gICAgICAgICAgICAuc2V0SXNzdWVyKHRoaXMuYXBpS2V5KVxuICAgICAgICAgICAgLnNldEV4cGlyYXRpb25UaW1lKHRoaXMudHRsKVxuICAgICAgICAgICAgLnNldE5vdEJlZm9yZSgwKTtcbiAgICAgICAgaWYgKHRoaXMuaWRlbnRpdHkpIHtcbiAgICAgICAgICAgIGp3dC5zZXRTdWJqZWN0KHRoaXMuaWRlbnRpdHkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKChfYSA9IHRoaXMuZ3JhbnRzLnZpZGVvKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eucm9vbUpvaW4pIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdpZGVudGl0eSBpcyByZXF1aXJlZCBmb3Igam9pbiBidXQgbm90IHNldCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBqd3Quc2lnbihzZWNyZXQpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBUb2tlblZlcmlmaWVyIHtcbiAgICBjb25zdHJ1Y3RvcihhcGlLZXksIGFwaVNlY3JldCkge1xuICAgICAgICB0aGlzLmFwaUtleSA9IGFwaUtleTtcbiAgICAgICAgdGhpcy5hcGlTZWNyZXQgPSBhcGlTZWNyZXQ7XG4gICAgfVxuICAgIGFzeW5jIHZlcmlmeSh0b2tlbikge1xuICAgICAgICBjb25zdCBzZWNyZXQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodGhpcy5hcGlTZWNyZXQpO1xuICAgICAgICBjb25zdCB7IHBheWxvYWQgfSA9IGF3YWl0IGpvc2Uuand0VmVyaWZ5KHRva2VuLCBzZWNyZXQsIHsgaXNzdWVyOiB0aGlzLmFwaUtleSB9KTtcbiAgICAgICAgaWYgKCFwYXlsb2FkKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignaW52YWxpZCB0b2tlbicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXlsb2FkO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFjY2Vzc1Rva2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/EgressClient.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EgressClient: () => (/* binding */ EgressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n\nconst svc = 'Egress';\n/**\n * Client to access Egress APIs\n */\nclass EgressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    async startRoomCompositeEgress(roomName, output, optsOrLayout, options, audioOnly, videoOnly, customBaseUrl) {\n        let layout;\n        if (optsOrLayout !== undefined) {\n            if (typeof optsOrLayout === 'string') {\n                layout = optsOrLayout;\n            }\n            else {\n                const opts = optsOrLayout;\n                layout = opts.layout;\n                options = opts.encodingOptions;\n                audioOnly = opts.audioOnly;\n                videoOnly = opts.videoOnly;\n                customBaseUrl = opts.customBaseUrl;\n            }\n        }\n        layout !== null && layout !== void 0 ? layout : (layout = '');\n        audioOnly !== null && audioOnly !== void 0 ? audioOnly : (audioOnly = false);\n        videoOnly !== null && videoOnly !== void 0 ? videoOnly : (videoOnly = false);\n        customBaseUrl !== null && customBaseUrl !== void 0 ? customBaseUrl : (customBaseUrl = '');\n        const { output: legacyOutput, options: egressOptions, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, options);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest({\n            roomName,\n            layout,\n            audioOnly,\n            videoOnly,\n            customBaseUrl,\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartRoomCompositeEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param url url\n     * @param output file or stream output\n     * @param opts WebOptions\n     */\n    async startWebEgress(url, output, opts) {\n        const audioOnly = (opts === null || opts === void 0 ? void 0 : opts.audioOnly) || false;\n        const videoOnly = (opts === null || opts === void 0 ? void 0 : opts.videoOnly) || false;\n        const awaitStartSignal = (opts === null || opts === void 0 ? void 0 : opts.awaitStartSignal) || false;\n        const { output: legacyOutput, options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, opts === null || opts === void 0 ? void 0 : opts.encodingOptions);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest({\n            url,\n            audioOnly,\n            videoOnly,\n            awaitStartSignal,\n            output: legacyOutput,\n            options,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartWebEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Export a participant's audio and video tracks,\n     *\n     * @param roomName room name\n     * @param output one or more outputs\n     * @param opts ParticipantEgressOptions\n     */\n    async startParticipantEgress(roomName, identity, output, opts) {\n        const { options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs } = this.getOutputParams(output, opts === null || opts === void 0 ? void 0 : opts.encodingOptions);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest({\n            roomName,\n            identity,\n            options,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartParticipantEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async startTrackCompositeEgress(roomName, output, optsOrAudioTrackId, videoTrackId, options) {\n        let audioTrackId;\n        if (optsOrAudioTrackId !== undefined) {\n            if (typeof optsOrAudioTrackId === 'string') {\n                audioTrackId = optsOrAudioTrackId;\n            }\n            else {\n                const opts = optsOrAudioTrackId;\n                audioTrackId = opts.audioTrackId;\n                videoTrackId = opts.videoTrackId;\n                options = opts.encodingOptions;\n            }\n        }\n        audioTrackId !== null && audioTrackId !== void 0 ? audioTrackId : (audioTrackId = '');\n        videoTrackId !== null && videoTrackId !== void 0 ? videoTrackId : (videoTrackId = '');\n        const { output: legacyOutput, options: egressOptions, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, options);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest({\n            roomName,\n            audioTrackId,\n            videoTrackId,\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartTrackCompositeEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    isEncodedOutputs(output) {\n        return (output.file !== undefined ||\n            output.stream !== undefined ||\n            output.segments !== undefined);\n    }\n    isEncodedFileOutput(output) {\n        return (output.filepath !== undefined ||\n            output.fileType !== undefined);\n    }\n    isSegmentedFileOutput(output) {\n        return (output.filenamePrefix !== undefined ||\n            output.playlistName !== undefined ||\n            output.filenameSuffix !== undefined);\n    }\n    isStreamOutput(output) {\n        return (output.protocol !== undefined || output.urls !== undefined);\n    }\n    getOutputParams(output, opts) {\n        let file;\n        let fileOutputs;\n        let stream;\n        let streamOutputs;\n        let segments;\n        let segmentOutputs;\n        let imageOutputs;\n        if (this.isEncodedOutputs(output)) {\n            if (output.file !== undefined) {\n                fileOutputs = [output.file];\n            }\n            if (output.stream !== undefined) {\n                streamOutputs = [output.stream];\n            }\n            if (output.segments !== undefined) {\n                segmentOutputs = [output.segments];\n            }\n            if (output.images !== undefined) {\n                imageOutputs = [output.images];\n            }\n        }\n        else if (this.isEncodedFileOutput(output)) {\n            file = output;\n            fileOutputs = [file];\n        }\n        else if (this.isSegmentedFileOutput(output)) {\n            segments = output;\n            segmentOutputs = [segments];\n        }\n        else if (this.isStreamOutput(output)) {\n            stream = output;\n            streamOutputs = [stream];\n        }\n        let legacyOutput;\n        if (file) {\n            legacyOutput = {\n                case: 'file',\n                value: file,\n            };\n        }\n        else if (stream) {\n            legacyOutput = {\n                case: 'stream',\n                value: stream,\n            };\n        }\n        else if (segments) {\n            legacyOutput = {\n                case: 'segments',\n                value: segments,\n            };\n        }\n        let egressOptions;\n        if (opts) {\n            if (typeof opts === 'number') {\n                egressOptions = {\n                    case: 'preset',\n                    value: opts,\n                };\n            }\n            else {\n                egressOptions = {\n                    case: 'advanced',\n                    value: opts,\n                };\n            }\n        }\n        return {\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        };\n    }\n    /**\n     * @param roomName room name\n     * @param output file or websocket output\n     * @param trackId track Id\n     */\n    async startTrackEgress(roomName, output, trackId) {\n        let legacyOutput;\n        if (typeof output === 'string') {\n            legacyOutput = {\n                case: 'websocketUrl',\n                value: output,\n            };\n        }\n        else {\n            legacyOutput = {\n                case: 'file',\n                value: output,\n            };\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest({\n            roomName,\n            trackId,\n            output: legacyOutput,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartTrackEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param egressId\n     * @param layout\n     */\n    async updateLayout(egressId, layout) {\n        const data = await this.rpc.request(svc, 'UpdateLayout', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateLayoutRequest({ egressId, layout }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param egressId\n     * @param addOutputUrls\n     * @param removeOutputUrls\n     */\n    async updateStream(egressId, addOutputUrls, removeOutputUrls) {\n        addOutputUrls !== null && addOutputUrls !== void 0 ? addOutputUrls : (addOutputUrls = []);\n        removeOutputUrls !== null && removeOutputUrls !== void 0 ? removeOutputUrls : (removeOutputUrls = []);\n        const data = await this.rpc.request(svc, 'UpdateStream', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateStreamRequest({ egressId, addOutputUrls, removeOutputUrls }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param roomName list egress for one room only\n     */\n    async listEgress(options) {\n        var _a;\n        let req = {};\n        if (typeof options === 'string') {\n            req.roomName = options;\n        }\n        else if (options !== undefined) {\n            req = options;\n        }\n        const data = await this.rpc.request(svc, 'ListEgress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressRequest(req).toJson(), await this.authHeader({ roomRecord: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param egressId\n     */\n    async stopEgress(egressId) {\n        const data = await this.rpc.request(svc, 'StopEgress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StopEgressRequest({ egressId }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=EgressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js":
/*!***************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/IngressClient.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IngressClient: () => (/* binding */ IngressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n\nconst svc = 'Ingress';\n/**\n * Client to access Ingress APIs\n */\nclass IngressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * @param inputType protocol for the ingress\n     * @param opts CreateIngressOptions\n     */\n    async createIngress(inputType, opts) {\n        let name = '';\n        let roomName = '';\n        let participantName = '';\n        let participantIdentity = '';\n        let participantMetadata;\n        let bypassTranscoding = false;\n        let enableTranscoding;\n        let url = '';\n        let audio;\n        let video;\n        if (opts !== undefined) {\n            name = opts.name || '';\n            roomName = opts.roomName || '';\n            participantName = opts.participantName || '';\n            participantIdentity = opts.participantIdentity || '';\n            bypassTranscoding = opts.bypassTranscoding || false;\n            enableTranscoding = opts.enableTranscoding;\n            url = opts.url || '';\n            audio = opts.audio;\n            video = opts.video;\n            participantMetadata = opts.participantMetadata;\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateIngressRequest({\n            inputType,\n            name,\n            roomName,\n            participantIdentity,\n            participantMetadata,\n            participantName,\n            bypassTranscoding,\n            enableTranscoding,\n            url,\n            audio,\n            video,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateIngress', req, await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param ingressId ID of the ingress to update\n     * @param opts UpdateIngressOptions\n     */\n    async updateIngress(ingressId, opts) {\n        const name = opts.name || '';\n        const roomName = opts.roomName || '';\n        const participantName = opts.participantName || '';\n        const participantIdentity = opts.participantIdentity || '';\n        const { participantMetadata } = opts;\n        const { audio, video, bypassTranscoding, enableTranscoding } = opts;\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateIngressRequest({\n            ingressId,\n            name,\n            roomName,\n            participantIdentity,\n            participantName,\n            participantMetadata,\n            bypassTranscoding,\n            enableTranscoding,\n            audio,\n            video,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'UpdateIngress', req, await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async listIngress(arg) {\n        var _a;\n        let req = {};\n        if (typeof arg === 'string') {\n            req.roomName = arg;\n        }\n        else if (arg) {\n            req = arg;\n        }\n        const data = await this.rpc.request(svc, 'ListIngress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressRequest(req).toJson(), await this.authHeader({ ingressAdmin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param ingressId ingress to delete\n     */\n    async deleteIngress(ingressId) {\n        const data = await this.rpc.request(svc, 'DeleteIngress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteIngressRequest({ ingressId }).toJson(), await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=IngressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvSW5ncmVzc0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQzRKO0FBQ2pIO0FBQ2M7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0QkFBNEIsdURBQVc7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsa0RBQVEsT0FBTyx3REFBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtRUFBb0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwrRkFBK0Ysb0JBQW9CO0FBQ25ILGVBQWUsMERBQVcsa0JBQWtCLDJCQUEyQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzQkFBc0I7QUFDdEMsZ0JBQWdCLHFEQUFxRDtBQUNyRSx3QkFBd0IsbUVBQW9CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULCtGQUErRixvQkFBb0I7QUFDbkgsZUFBZSwwREFBVyxrQkFBa0IsMkJBQTJCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLGlFQUFrQix3Q0FBd0Msb0JBQW9CO0FBQ2xKLHFCQUFxQixrRUFBbUIsa0JBQWtCLDJCQUEyQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLG1FQUFvQixHQUFHLFdBQVcsb0NBQW9DLG9CQUFvQjtBQUNoSyxlQUFlLDBEQUFXLGtCQUFrQiwyQkFBMkI7QUFDdkU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L0luZ3Jlc3NDbGllbnQuanM/MDdiYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDI0IExpdmVLaXQsIEluYy5cbi8vXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuaW1wb3J0IHsgQ3JlYXRlSW5ncmVzc1JlcXVlc3QsIERlbGV0ZUluZ3Jlc3NSZXF1ZXN0LCBJbmdyZXNzSW5mbywgTGlzdEluZ3Jlc3NSZXF1ZXN0LCBMaXN0SW5ncmVzc1Jlc3BvbnNlLCBVcGRhdGVJbmdyZXNzUmVxdWVzdCwgfSBmcm9tICdAbGl2ZWtpdC9wcm90b2NvbCc7XG5pbXBvcnQgU2VydmljZUJhc2UgZnJvbSAnLi9TZXJ2aWNlQmFzZS5qcyc7XG5pbXBvcnQgeyBUd2lycFJwYywgbGl2ZWtpdFBhY2thZ2UgfSBmcm9tICcuL1R3aXJwUlBDLmpzJztcbmNvbnN0IHN2YyA9ICdJbmdyZXNzJztcbi8qKlxuICogQ2xpZW50IHRvIGFjY2VzcyBJbmdyZXNzIEFQSXNcbiAqL1xuZXhwb3J0IGNsYXNzIEluZ3Jlc3NDbGllbnQgZXh0ZW5kcyBTZXJ2aWNlQmFzZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGhvc3QgaG9zdG5hbWUgaW5jbHVkaW5nIHByb3RvY29sLiBpLmUuICdodHRwczovL2NsdXN0ZXIubGl2ZWtpdC5pbydcbiAgICAgKiBAcGFyYW0gYXBpS2V5IEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9LRVlcbiAgICAgKiBAcGFyYW0gc2VjcmV0IEFQSSBTZWNyZXQsIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9TRUNSRVRcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihob3N0LCBhcGlLZXksIHNlY3JldCkge1xuICAgICAgICBzdXBlcihhcGlLZXksIHNlY3JldCk7XG4gICAgICAgIHRoaXMucnBjID0gbmV3IFR3aXJwUnBjKGhvc3QsIGxpdmVraXRQYWNrYWdlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGlucHV0VHlwZSBwcm90b2NvbCBmb3IgdGhlIGluZ3Jlc3NcbiAgICAgKiBAcGFyYW0gb3B0cyBDcmVhdGVJbmdyZXNzT3B0aW9uc1xuICAgICAqL1xuICAgIGFzeW5jIGNyZWF0ZUluZ3Jlc3MoaW5wdXRUeXBlLCBvcHRzKSB7XG4gICAgICAgIGxldCBuYW1lID0gJyc7XG4gICAgICAgIGxldCByb29tTmFtZSA9ICcnO1xuICAgICAgICBsZXQgcGFydGljaXBhbnROYW1lID0gJyc7XG4gICAgICAgIGxldCBwYXJ0aWNpcGFudElkZW50aXR5ID0gJyc7XG4gICAgICAgIGxldCBwYXJ0aWNpcGFudE1ldGFkYXRhO1xuICAgICAgICBsZXQgYnlwYXNzVHJhbnNjb2RpbmcgPSBmYWxzZTtcbiAgICAgICAgbGV0IGVuYWJsZVRyYW5zY29kaW5nO1xuICAgICAgICBsZXQgdXJsID0gJyc7XG4gICAgICAgIGxldCBhdWRpbztcbiAgICAgICAgbGV0IHZpZGVvO1xuICAgICAgICBpZiAob3B0cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBuYW1lID0gb3B0cy5uYW1lIHx8ICcnO1xuICAgICAgICAgICAgcm9vbU5hbWUgPSBvcHRzLnJvb21OYW1lIHx8ICcnO1xuICAgICAgICAgICAgcGFydGljaXBhbnROYW1lID0gb3B0cy5wYXJ0aWNpcGFudE5hbWUgfHwgJyc7XG4gICAgICAgICAgICBwYXJ0aWNpcGFudElkZW50aXR5ID0gb3B0cy5wYXJ0aWNpcGFudElkZW50aXR5IHx8ICcnO1xuICAgICAgICAgICAgYnlwYXNzVHJhbnNjb2RpbmcgPSBvcHRzLmJ5cGFzc1RyYW5zY29kaW5nIHx8IGZhbHNlO1xuICAgICAgICAgICAgZW5hYmxlVHJhbnNjb2RpbmcgPSBvcHRzLmVuYWJsZVRyYW5zY29kaW5nO1xuICAgICAgICAgICAgdXJsID0gb3B0cy51cmwgfHwgJyc7XG4gICAgICAgICAgICBhdWRpbyA9IG9wdHMuYXVkaW87XG4gICAgICAgICAgICB2aWRlbyA9IG9wdHMudmlkZW87XG4gICAgICAgICAgICBwYXJ0aWNpcGFudE1ldGFkYXRhID0gb3B0cy5wYXJ0aWNpcGFudE1ldGFkYXRhO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlcSA9IG5ldyBDcmVhdGVJbmdyZXNzUmVxdWVzdCh7XG4gICAgICAgICAgICBpbnB1dFR5cGUsXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgcm9vbU5hbWUsXG4gICAgICAgICAgICBwYXJ0aWNpcGFudElkZW50aXR5LFxuICAgICAgICAgICAgcGFydGljaXBhbnRNZXRhZGF0YSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TmFtZSxcbiAgICAgICAgICAgIGJ5cGFzc1RyYW5zY29kaW5nLFxuICAgICAgICAgICAgZW5hYmxlVHJhbnNjb2RpbmcsXG4gICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICBhdWRpbyxcbiAgICAgICAgICAgIHZpZGVvLFxuICAgICAgICB9KS50b0pzb24oKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3Qoc3ZjLCAnQ3JlYXRlSW5ncmVzcycsIHJlcSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgaW5ncmVzc0FkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIEluZ3Jlc3NJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGluZ3Jlc3NJZCBJRCBvZiB0aGUgaW5ncmVzcyB0byB1cGRhdGVcbiAgICAgKiBAcGFyYW0gb3B0cyBVcGRhdGVJbmdyZXNzT3B0aW9uc1xuICAgICAqL1xuICAgIGFzeW5jIHVwZGF0ZUluZ3Jlc3MoaW5ncmVzc0lkLCBvcHRzKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBvcHRzLm5hbWUgfHwgJyc7XG4gICAgICAgIGNvbnN0IHJvb21OYW1lID0gb3B0cy5yb29tTmFtZSB8fCAnJztcbiAgICAgICAgY29uc3QgcGFydGljaXBhbnROYW1lID0gb3B0cy5wYXJ0aWNpcGFudE5hbWUgfHwgJyc7XG4gICAgICAgIGNvbnN0IHBhcnRpY2lwYW50SWRlbnRpdHkgPSBvcHRzLnBhcnRpY2lwYW50SWRlbnRpdHkgfHwgJyc7XG4gICAgICAgIGNvbnN0IHsgcGFydGljaXBhbnRNZXRhZGF0YSB9ID0gb3B0cztcbiAgICAgICAgY29uc3QgeyBhdWRpbywgdmlkZW8sIGJ5cGFzc1RyYW5zY29kaW5nLCBlbmFibGVUcmFuc2NvZGluZyB9ID0gb3B0cztcbiAgICAgICAgY29uc3QgcmVxID0gbmV3IFVwZGF0ZUluZ3Jlc3NSZXF1ZXN0KHtcbiAgICAgICAgICAgIGluZ3Jlc3NJZCxcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICByb29tTmFtZSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50SWRlbnRpdHksXG4gICAgICAgICAgICBwYXJ0aWNpcGFudE5hbWUsXG4gICAgICAgICAgICBwYXJ0aWNpcGFudE1ldGFkYXRhLFxuICAgICAgICAgICAgYnlwYXNzVHJhbnNjb2RpbmcsXG4gICAgICAgICAgICBlbmFibGVUcmFuc2NvZGluZyxcbiAgICAgICAgICAgIGF1ZGlvLFxuICAgICAgICAgICAgdmlkZW8sXG4gICAgICAgIH0pLnRvSnNvbigpO1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChzdmMsICdVcGRhdGVJbmdyZXNzJywgcmVxLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyBpbmdyZXNzQWRtaW46IHRydWUgfSkpO1xuICAgICAgICByZXR1cm4gSW5ncmVzc0luZm8uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbiAgICBhc3luYyBsaXN0SW5ncmVzcyhhcmcpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBsZXQgcmVxID0ge307XG4gICAgICAgIGlmICh0eXBlb2YgYXJnID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmVxLnJvb21OYW1lID0gYXJnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGFyZykge1xuICAgICAgICAgICAgcmVxID0gYXJnO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ0xpc3RJbmdyZXNzJywgbmV3IExpc3RJbmdyZXNzUmVxdWVzdChyZXEpLnRvSnNvbigpLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyBpbmdyZXNzQWRtaW46IHRydWUgfSkpO1xuICAgICAgICByZXR1cm4gKF9hID0gTGlzdEluZ3Jlc3NSZXNwb25zZS5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSkuaXRlbXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gaW5ncmVzc0lkIGluZ3Jlc3MgdG8gZGVsZXRlXG4gICAgICovXG4gICAgYXN5bmMgZGVsZXRlSW5ncmVzcyhpbmdyZXNzSWQpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3Qoc3ZjLCAnRGVsZXRlSW5ncmVzcycsIG5ldyBEZWxldGVJbmdyZXNzUmVxdWVzdCh7IGluZ3Jlc3NJZCB9KS50b0pzb24oKSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgaW5ncmVzc0FkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIEluZ3Jlc3NJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmdyZXNzQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/RoomServiceClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoomServiceClient: () => (/* binding */ RoomServiceClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'RoomService';\n/**\n * Client to access Room APIs\n */\nclass RoomServiceClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     *\n     * @param host - hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * Creates a new room. Explicit room creation is not required, since rooms will\n     * be automatically created when the first participant joins. This method can be\n     * used to customize room settings.\n     * @param options\n     */\n    async createRoom(options) {\n        const data = await this.rpc.request(svc, 'CreateRoom', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateRoomRequest(options).toJson(), await this.authHeader({ roomCreate: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * List active rooms\n     * @param names - when undefined or empty, list all rooms.\n     *                otherwise returns rooms with matching names\n     * @returns\n     */\n    async listRooms(names) {\n        var _a;\n        const data = await this.rpc.request(svc, 'ListRooms', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsRequest({ names: names !== null && names !== void 0 ? names : [] }).toJson(), await this.authHeader({ roomList: true }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsResponse.fromJson(data, { ignoreUnknownFields: true });\n        return (_a = res.rooms) !== null && _a !== void 0 ? _a : [];\n    }\n    async deleteRoom(room) {\n        await this.rpc.request(svc, 'DeleteRoom', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteRoomRequest({ room }).toJson(), await this.authHeader({ roomCreate: true }));\n    }\n    /**\n     * Update metadata of a room\n     * @param room name of the room\n     * @param metadata the new metadata for the room\n     */\n    async updateRoomMetadata(room, metadata) {\n        const data = await this.rpc.request(svc, 'UpdateRoomMetadata', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateRoomMetadataRequest({ room, metadata }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * List participants in a room\n     * @param room name of the room\n     */\n    async listParticipants(room) {\n        var _a;\n        const data = await this.rpc.request(svc, 'ListParticipants', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsRequest({ room }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsResponse.fromJson(data, { ignoreUnknownFields: true });\n        return (_a = res.participants) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get information on a specific participant, including the tracks that participant\n     * has published\n     * @param room name of the room\n     * @param identity identity of the participant to return\n     */\n    async getParticipant(room, identity) {\n        const data = await this.rpc.request(svc, 'GetParticipant', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Removes a participant in the room. This will disconnect the participant\n     * and will emit a Disconnected event for that participant.\n     * Even after being removed, the participant can still re-join the room.\n     * @param room\n     * @param identity\n     */\n    async removeParticipant(room, identity) {\n        await this.rpc.request(svc, 'RemoveParticipant', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n    }\n    /**\n     * Mutes a track that the participant has published.\n     * @param room\n     * @param identity\n     * @param trackSid sid of the track to be muted\n     * @param muted true to mute, false to unmute\n     */\n    async mutePublishedTrack(room, identity, trackSid, muted) {\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackRequest({\n            room,\n            identity,\n            trackSid,\n            muted,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'MutePublishedTrack', req, await this.authHeader({ roomAdmin: true, room }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackResponse.fromJson(data, { ignoreUnknownFields: true });\n        return res.track;\n    }\n    async updateParticipant(room, identity, metadataOrOptions, maybePermission, maybeName) {\n        const hasOptions = typeof metadataOrOptions === 'object';\n        const metadata = hasOptions ? metadataOrOptions === null || metadataOrOptions === void 0 ? void 0 : metadataOrOptions.metadata : metadataOrOptions;\n        const permission = hasOptions ? metadataOrOptions.permission : maybePermission;\n        const name = hasOptions ? metadataOrOptions.name : maybeName;\n        const attributes = hasOptions\n            ? metadataOrOptions.attributes\n            : {};\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateParticipantRequest({\n            room,\n            identity,\n            attributes,\n            metadata,\n            name,\n        });\n        if (permission) {\n            req.permission = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission(permission);\n        }\n        const data = await this.rpc.request(svc, 'UpdateParticipant', req.toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Updates a participant's subscription to tracks\n     * @param room\n     * @param identity\n     * @param trackSids\n     * @param subscribe true to subscribe, false to unsubscribe\n     */\n    async updateSubscriptions(room, identity, trackSids, subscribe) {\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSubscriptionsRequest({\n            room,\n            identity,\n            trackSids,\n            subscribe,\n            participantTracks: [],\n        }).toJson();\n        await this.rpc.request(svc, 'UpdateSubscriptions', req, await this.authHeader({ roomAdmin: true, room }));\n    }\n    async sendData(room, data, kind, options = {}) {\n        const destinationSids = Array.isArray(options) ? options : options.destinationSids;\n        const topic = Array.isArray(options) ? undefined : options.topic;\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SendDataRequest({\n            room,\n            data,\n            kind,\n            destinationSids: destinationSids !== null && destinationSids !== void 0 ? destinationSids : [],\n            topic,\n        });\n        if (!Array.isArray(options) && options.destinationIdentities) {\n            req.destinationIdentities = options.destinationIdentities;\n        }\n        await this.rpc.request(svc, 'SendData', req.toJson(), await this.authHeader({ roomAdmin: true, room }));\n    }\n}\n//# sourceMappingURL=RoomServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js":
/*!*************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/ServiceBase.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ServiceBase)\n/* harmony export */ });\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Utilities to handle authentication\n */\nclass ServiceBase {\n    /**\n     * @param apiKey API Key.\n     * @param secret API Secret.\n     * @param ttl token TTL\n     */\n    constructor(apiKey, secret, ttl) {\n        this.apiKey = apiKey;\n        this.secret = secret;\n        this.ttl = ttl || '10m';\n    }\n    async authHeader(grant, sip) {\n        const at = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__.AccessToken(this.apiKey, this.secret, { ttl: this.ttl });\n        at.addGrant(grant);\n        if (sip) {\n            at.addSIPGrant(sip);\n        }\n        return {\n            Authorization: `Bearer ${await at.toJwt()}`,\n        };\n    }\n}\n//# sourceMappingURL=ServiceBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvU2VydmljZUJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFXLDZCQUE2QixlQUFlO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsaUJBQWlCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1NlcnZpY2VCYXNlLmpzPzdmMzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyNCBMaXZlS2l0LCBJbmMuXG4vL1xuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbmltcG9ydCB7IEFjY2Vzc1Rva2VuIH0gZnJvbSAnLi9BY2Nlc3NUb2tlbi5qcyc7XG4vKipcbiAqIFV0aWxpdGllcyB0byBoYW5kbGUgYXV0aGVudGljYXRpb25cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VydmljZUJhc2Uge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBhcGlLZXkgQVBJIEtleS5cbiAgICAgKiBAcGFyYW0gc2VjcmV0IEFQSSBTZWNyZXQuXG4gICAgICogQHBhcmFtIHR0bCB0b2tlbiBUVExcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihhcGlLZXksIHNlY3JldCwgdHRsKSB7XG4gICAgICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgICAgICB0aGlzLnNlY3JldCA9IHNlY3JldDtcbiAgICAgICAgdGhpcy50dGwgPSB0dGwgfHwgJzEwbSc7XG4gICAgfVxuICAgIGFzeW5jIGF1dGhIZWFkZXIoZ3JhbnQsIHNpcCkge1xuICAgICAgICBjb25zdCBhdCA9IG5ldyBBY2Nlc3NUb2tlbih0aGlzLmFwaUtleSwgdGhpcy5zZWNyZXQsIHsgdHRsOiB0aGlzLnR0bCB9KTtcbiAgICAgICAgYXQuYWRkR3JhbnQoZ3JhbnQpO1xuICAgICAgICBpZiAoc2lwKSB7XG4gICAgICAgICAgICBhdC5hZGRTSVBHcmFudChzaXApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YXdhaXQgYXQudG9Kd3QoKX1gLFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcnZpY2VCYXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js":
/*!***********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/SipClient.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SipClient: () => (/* binding */ SipClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n\nconst svc = 'SIP';\n/**\n * Client to access Egress APIs\n */\nclass SipClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * @param number phone number of the trunk\n     * @param opts CreateSipTrunkOptions\n     * @deprecated use createSipInboundTrunk or createSipOutboundTrunk\n     */\n    async createSipTrunk(number, opts) {\n        let inboundAddresses;\n        let inboundNumbers;\n        let inboundUsername = '';\n        let inboundPassword = '';\n        let outboundAddress = '';\n        let outboundUsername = '';\n        let outboundPassword = '';\n        let name = '';\n        let metadata = '';\n        if (opts !== undefined) {\n            inboundAddresses = opts.inbound_addresses;\n            inboundNumbers = opts.inbound_numbers;\n            inboundUsername = opts.inbound_username || '';\n            inboundPassword = opts.inbound_password || '';\n            outboundAddress = opts.outbound_address || '';\n            outboundUsername = opts.outbound_username || '';\n            outboundPassword = opts.outbound_password || '';\n            name = opts.name || '';\n            metadata = opts.metadata || '';\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPTrunkRequest({\n            name: name,\n            metadata: metadata,\n            inboundAddresses: inboundAddresses,\n            inboundNumbers: inboundNumbers,\n            inboundUsername: inboundUsername,\n            inboundPassword: inboundPassword,\n            outboundNumber: number,\n            outboundAddress: outboundAddress,\n            outboundUsername: outboundUsername,\n            outboundPassword: outboundPassword,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPTrunk', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     @param name human-readable name of the trunk\n     * @param numbers phone numbers of the trunk\n     * @param opts CreateSipTrunkOptions\n     */\n    async createSipInboundTrunk(name, numbers, opts) {\n        let allowedAddresses;\n        let allowedNumbers;\n        let authUsername = '';\n        let authPassword = '';\n        let metadata = '';\n        if (opts !== undefined) {\n            allowedAddresses = opts.allowed_addresses;\n            allowedNumbers = opts.allowed_numbers;\n            authUsername = opts.auth_username || '';\n            authPassword = opts.auth_password || '';\n            metadata = opts.metadata || '';\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPInboundTrunkRequest({\n            trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo({\n                name: name,\n                numbers: numbers,\n                metadata: metadata,\n                allowedAddresses: allowedAddresses,\n                allowedNumbers: allowedNumbers,\n                authUsername: authUsername,\n                authPassword: authPassword,\n            }),\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPInboundTrunk', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param name human-readable name of the trunk\n     * @param address hostname and port of the SIP server to dial\n     * @param numbers phone numbers of the trunk\n     * @param opts CreateSipTrunkOptions\n     */\n    async createSipOutboundTrunk(name, address, numbers, opts) {\n        let authUsername = '';\n        let authPassword = '';\n        let transport = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTransport.SIP_TRANSPORT_AUTO;\n        let metadata = '';\n        if (opts !== undefined) {\n            authUsername = opts.auth_username || '';\n            authPassword = opts.auth_password || '';\n            transport = opts.transport || _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTransport.SIP_TRANSPORT_AUTO;\n            metadata = opts.metadata || '';\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPOutboundTrunkRequest({\n            trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo({\n                name: name,\n                address: address,\n                numbers: numbers,\n                metadata: metadata,\n                transport: transport,\n                authUsername: authUsername,\n                authPassword: authPassword,\n            }),\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPOutboundTrunk', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @deprecated use listSipInboundTrunk or listSipOutboundTrunk\n     */\n    async listSipTrunk() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    async listSipInboundTrunk() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPInboundTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    async listSipOutboundTrunk() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPOutboundTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param sipTrunkId sip trunk to delete\n     */\n    async deleteSipTrunk(sipTrunkId) {\n        const data = await this.rpc.request(svc, 'DeleteSIPTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPTrunkRequest({ sipTrunkId }).toJson(), await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param rule sip dispatch rule\n     * @param opts CreateSipDispatchRuleOptions\n     */\n    async createSipDispatchRule(rule, opts) {\n        let trunkIds;\n        let hidePhoneNumber = false;\n        let name = '';\n        let metadata = '';\n        let ruleProto = undefined;\n        if (opts !== undefined) {\n            trunkIds = opts.trunkIds;\n            hidePhoneNumber = opts.hidePhoneNumber || false;\n            name = opts.name || '';\n            metadata = opts.metadata || '';\n        }\n        if (rule.type == 'direct') {\n            ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n                rule: {\n                    case: 'dispatchRuleDirect',\n                    value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleDirect({\n                        roomName: rule.roomName,\n                        pin: rule.pin || '',\n                    }),\n                },\n            });\n        }\n        else if (rule.type == 'individual') {\n            ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n                rule: {\n                    case: 'dispatchRuleIndividual',\n                    value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleIndividual({\n                        roomPrefix: rule.roomPrefix,\n                        pin: rule.pin || '',\n                    }),\n                },\n            });\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPDispatchRuleRequest({\n            rule: ruleProto,\n            trunkIds: trunkIds,\n            hidePhoneNumber: hidePhoneNumber,\n            name: name,\n            metadata: metadata,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPDispatchRule', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async listSipDispatchRule() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPDispatchRule', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param sipDispatchRuleId sip trunk to delete\n     */\n    async deleteSipDispatchRule(sipDispatchRuleId) {\n        const data = await this.rpc.request(svc, 'DeleteSIPDispatchRule', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPDispatchRuleRequest({ sipDispatchRuleId }).toJson(), await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param sipTrunkId sip trunk to use for the call\n     * @param number number to dial\n     * @param roomName room to attach the call to\n     * @param opts CreateSipParticipantOptions\n     */\n    async createSipParticipant(sipTrunkId, number, roomName, opts) {\n        let participantIdentity = '';\n        let participantName = '';\n        let participantMetadata = '';\n        let dtmf = '';\n        let playRingtone = false;\n        let hidePhoneNumber = false;\n        if (opts !== undefined) {\n            participantIdentity = opts.participantIdentity || '';\n            participantName = opts.participantName || '';\n            participantMetadata = opts.participantMetadata || '';\n            dtmf = opts.dtmf || '';\n            playRingtone = opts.playRingtone || false;\n            hidePhoneNumber = opts.hidePhoneNumber || false;\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPParticipantRequest({\n            sipTrunkId: sipTrunkId,\n            sipCallTo: number,\n            roomName: roomName,\n            participantIdentity: participantIdentity,\n            participantName: participantName,\n            participantMetadata: participantMetadata,\n            dtmf: dtmf,\n            playRingtone: playRingtone,\n            hidePhoneNumber: hidePhoneNumber,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPParticipant', req, await this.authHeader({}, { call: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=SipClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvU2lwQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDbW5CO0FBQ3hrQjtBQUNjO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sd0JBQXdCLHVEQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGtEQUFRLE9BQU8sd0RBQWM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9FQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxnR0FBZ0csSUFBSSxhQUFhO0FBQ2pILGVBQWUsMkRBQVksa0JBQWtCLDJCQUEyQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwyRUFBNEI7QUFDcEQsdUJBQXVCLGtFQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsdUdBQXVHLElBQUksYUFBYTtBQUN4SCxlQUFlLGtFQUFtQixrQkFBa0IsMkJBQTJCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLDJEQUFZO0FBQ3REO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQTZCO0FBQ3JELHVCQUF1QixtRUFBb0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULHdHQUF3RyxJQUFJLGFBQWE7QUFDekgsZUFBZSxtRUFBb0Isa0JBQWtCLDJCQUEyQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxrRUFBbUIsd0NBQXdDLElBQUksYUFBYTtBQUNqSixxQkFBcUIsbUVBQW9CLGtCQUFrQiwyQkFBMkI7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUseUVBQTBCLHdDQUF3QyxJQUFJLGFBQWE7QUFDL0oscUJBQXFCLDBFQUEyQixrQkFBa0IsMkJBQTJCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLDBFQUEyQix3Q0FBd0MsSUFBSSxhQUFhO0FBQ2pLLHFCQUFxQiwyRUFBNEIsa0JBQWtCLDJCQUEyQjtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLG9FQUFxQixHQUFHLFlBQVksb0NBQW9DLElBQUksYUFBYTtBQUNoSyxlQUFlLDJEQUFZLGtCQUFrQiwyQkFBMkI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDhEQUFlO0FBQzNDO0FBQ0E7QUFDQSwrQkFBK0Isb0VBQXFCO0FBQ3BEO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsNEJBQTRCLDhEQUFlO0FBQzNDO0FBQ0E7QUFDQSwrQkFBK0Isd0VBQXlCO0FBQ3hEO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBLHdCQUF3QiwyRUFBNEI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCx1R0FBdUcsSUFBSSxhQUFhO0FBQ3hILGVBQWUsa0VBQW1CLGtCQUFrQiwyQkFBMkI7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUseUVBQTBCLHdDQUF3QyxJQUFJLGFBQWE7QUFDL0oscUJBQXFCLDBFQUEyQixrQkFBa0IsMkJBQTJCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RUFBOEUsMkVBQTRCLEdBQUcsbUJBQW1CLG9DQUFvQyxJQUFJLGFBQWE7QUFDckwsZUFBZSxrRUFBbUIsa0JBQWtCLDJCQUEyQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwRUFBMkI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHNHQUFzRyxJQUFJLFlBQVk7QUFDdEgsZUFBZSxpRUFBa0Isa0JBQWtCLDJCQUEyQjtBQUM5RTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1jb21wYW5pb24vLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvU2lwQ2xpZW50LmpzP2IzMDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyNCBMaXZlS2l0LCBJbmMuXG4vL1xuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbmltcG9ydCB7IENyZWF0ZVNJUERpc3BhdGNoUnVsZVJlcXVlc3QsIENyZWF0ZVNJUEluYm91bmRUcnVua1JlcXVlc3QsIENyZWF0ZVNJUE91dGJvdW5kVHJ1bmtSZXF1ZXN0LCBDcmVhdGVTSVBQYXJ0aWNpcGFudFJlcXVlc3QsIENyZWF0ZVNJUFRydW5rUmVxdWVzdCwgRGVsZXRlU0lQRGlzcGF0Y2hSdWxlUmVxdWVzdCwgRGVsZXRlU0lQVHJ1bmtSZXF1ZXN0LCBMaXN0U0lQRGlzcGF0Y2hSdWxlUmVxdWVzdCwgTGlzdFNJUERpc3BhdGNoUnVsZVJlc3BvbnNlLCBMaXN0U0lQSW5ib3VuZFRydW5rUmVxdWVzdCwgTGlzdFNJUEluYm91bmRUcnVua1Jlc3BvbnNlLCBMaXN0U0lQT3V0Ym91bmRUcnVua1JlcXVlc3QsIExpc3RTSVBPdXRib3VuZFRydW5rUmVzcG9uc2UsIExpc3RTSVBUcnVua1JlcXVlc3QsIExpc3RTSVBUcnVua1Jlc3BvbnNlLCBTSVBEaXNwYXRjaFJ1bGUsIFNJUERpc3BhdGNoUnVsZURpcmVjdCwgU0lQRGlzcGF0Y2hSdWxlSW5kaXZpZHVhbCwgU0lQRGlzcGF0Y2hSdWxlSW5mbywgU0lQSW5ib3VuZFRydW5rSW5mbywgU0lQT3V0Ym91bmRUcnVua0luZm8sIFNJUFBhcnRpY2lwYW50SW5mbywgU0lQVHJhbnNwb3J0LCBTSVBUcnVua0luZm8sIH0gZnJvbSAnQGxpdmVraXQvcHJvdG9jb2wnO1xuaW1wb3J0IFNlcnZpY2VCYXNlIGZyb20gJy4vU2VydmljZUJhc2UuanMnO1xuaW1wb3J0IHsgVHdpcnBScGMsIGxpdmVraXRQYWNrYWdlIH0gZnJvbSAnLi9Ud2lycFJQQy5qcyc7XG5jb25zdCBzdmMgPSAnU0lQJztcbi8qKlxuICogQ2xpZW50IHRvIGFjY2VzcyBFZ3Jlc3MgQVBJc1xuICovXG5leHBvcnQgY2xhc3MgU2lwQ2xpZW50IGV4dGVuZHMgU2VydmljZUJhc2Uge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBob3N0IGhvc3RuYW1lIGluY2x1ZGluZyBwcm90b2NvbC4gaS5lLiAnaHR0cHM6Ly9jbHVzdGVyLmxpdmVraXQuaW8nXG4gICAgICogQHBhcmFtIGFwaUtleSBBUEkgS2V5LCBjYW4gYmUgc2V0IGluIGVudiB2YXIgTElWRUtJVF9BUElfS0VZXG4gICAgICogQHBhcmFtIHNlY3JldCBBUEkgU2VjcmV0LCBjYW4gYmUgc2V0IGluIGVudiB2YXIgTElWRUtJVF9BUElfU0VDUkVUXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoaG9zdCwgYXBpS2V5LCBzZWNyZXQpIHtcbiAgICAgICAgc3VwZXIoYXBpS2V5LCBzZWNyZXQpO1xuICAgICAgICB0aGlzLnJwYyA9IG5ldyBUd2lycFJwYyhob3N0LCBsaXZla2l0UGFja2FnZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBudW1iZXIgcGhvbmUgbnVtYmVyIG9mIHRoZSB0cnVua1xuICAgICAqIEBwYXJhbSBvcHRzIENyZWF0ZVNpcFRydW5rT3B0aW9uc1xuICAgICAqIEBkZXByZWNhdGVkIHVzZSBjcmVhdGVTaXBJbmJvdW5kVHJ1bmsgb3IgY3JlYXRlU2lwT3V0Ym91bmRUcnVua1xuICAgICAqL1xuICAgIGFzeW5jIGNyZWF0ZVNpcFRydW5rKG51bWJlciwgb3B0cykge1xuICAgICAgICBsZXQgaW5ib3VuZEFkZHJlc3NlcztcbiAgICAgICAgbGV0IGluYm91bmROdW1iZXJzO1xuICAgICAgICBsZXQgaW5ib3VuZFVzZXJuYW1lID0gJyc7XG4gICAgICAgIGxldCBpbmJvdW5kUGFzc3dvcmQgPSAnJztcbiAgICAgICAgbGV0IG91dGJvdW5kQWRkcmVzcyA9ICcnO1xuICAgICAgICBsZXQgb3V0Ym91bmRVc2VybmFtZSA9ICcnO1xuICAgICAgICBsZXQgb3V0Ym91bmRQYXNzd29yZCA9ICcnO1xuICAgICAgICBsZXQgbmFtZSA9ICcnO1xuICAgICAgICBsZXQgbWV0YWRhdGEgPSAnJztcbiAgICAgICAgaWYgKG9wdHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaW5ib3VuZEFkZHJlc3NlcyA9IG9wdHMuaW5ib3VuZF9hZGRyZXNzZXM7XG4gICAgICAgICAgICBpbmJvdW5kTnVtYmVycyA9IG9wdHMuaW5ib3VuZF9udW1iZXJzO1xuICAgICAgICAgICAgaW5ib3VuZFVzZXJuYW1lID0gb3B0cy5pbmJvdW5kX3VzZXJuYW1lIHx8ICcnO1xuICAgICAgICAgICAgaW5ib3VuZFBhc3N3b3JkID0gb3B0cy5pbmJvdW5kX3Bhc3N3b3JkIHx8ICcnO1xuICAgICAgICAgICAgb3V0Ym91bmRBZGRyZXNzID0gb3B0cy5vdXRib3VuZF9hZGRyZXNzIHx8ICcnO1xuICAgICAgICAgICAgb3V0Ym91bmRVc2VybmFtZSA9IG9wdHMub3V0Ym91bmRfdXNlcm5hbWUgfHwgJyc7XG4gICAgICAgICAgICBvdXRib3VuZFBhc3N3b3JkID0gb3B0cy5vdXRib3VuZF9wYXNzd29yZCB8fCAnJztcbiAgICAgICAgICAgIG5hbWUgPSBvcHRzLm5hbWUgfHwgJyc7XG4gICAgICAgICAgICBtZXRhZGF0YSA9IG9wdHMubWV0YWRhdGEgfHwgJyc7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVxID0gbmV3IENyZWF0ZVNJUFRydW5rUmVxdWVzdCh7XG4gICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgbWV0YWRhdGE6IG1ldGFkYXRhLFxuICAgICAgICAgICAgaW5ib3VuZEFkZHJlc3NlczogaW5ib3VuZEFkZHJlc3NlcyxcbiAgICAgICAgICAgIGluYm91bmROdW1iZXJzOiBpbmJvdW5kTnVtYmVycyxcbiAgICAgICAgICAgIGluYm91bmRVc2VybmFtZTogaW5ib3VuZFVzZXJuYW1lLFxuICAgICAgICAgICAgaW5ib3VuZFBhc3N3b3JkOiBpbmJvdW5kUGFzc3dvcmQsXG4gICAgICAgICAgICBvdXRib3VuZE51bWJlcjogbnVtYmVyLFxuICAgICAgICAgICAgb3V0Ym91bmRBZGRyZXNzOiBvdXRib3VuZEFkZHJlc3MsXG4gICAgICAgICAgICBvdXRib3VuZFVzZXJuYW1lOiBvdXRib3VuZFVzZXJuYW1lLFxuICAgICAgICAgICAgb3V0Ym91bmRQYXNzd29yZDogb3V0Ym91bmRQYXNzd29yZCxcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ0NyZWF0ZVNJUFRydW5rJywgcmVxLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoe30sIHsgYWRtaW46IHRydWUgfSkpO1xuICAgICAgICByZXR1cm4gU0lQVHJ1bmtJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgIEBwYXJhbSBuYW1lIGh1bWFuLXJlYWRhYmxlIG5hbWUgb2YgdGhlIHRydW5rXG4gICAgICogQHBhcmFtIG51bWJlcnMgcGhvbmUgbnVtYmVycyBvZiB0aGUgdHJ1bmtcbiAgICAgKiBAcGFyYW0gb3B0cyBDcmVhdGVTaXBUcnVua09wdGlvbnNcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVTaXBJbmJvdW5kVHJ1bmsobmFtZSwgbnVtYmVycywgb3B0cykge1xuICAgICAgICBsZXQgYWxsb3dlZEFkZHJlc3NlcztcbiAgICAgICAgbGV0IGFsbG93ZWROdW1iZXJzO1xuICAgICAgICBsZXQgYXV0aFVzZXJuYW1lID0gJyc7XG4gICAgICAgIGxldCBhdXRoUGFzc3dvcmQgPSAnJztcbiAgICAgICAgbGV0IG1ldGFkYXRhID0gJyc7XG4gICAgICAgIGlmIChvcHRzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGFsbG93ZWRBZGRyZXNzZXMgPSBvcHRzLmFsbG93ZWRfYWRkcmVzc2VzO1xuICAgICAgICAgICAgYWxsb3dlZE51bWJlcnMgPSBvcHRzLmFsbG93ZWRfbnVtYmVycztcbiAgICAgICAgICAgIGF1dGhVc2VybmFtZSA9IG9wdHMuYXV0aF91c2VybmFtZSB8fCAnJztcbiAgICAgICAgICAgIGF1dGhQYXNzd29yZCA9IG9wdHMuYXV0aF9wYXNzd29yZCB8fCAnJztcbiAgICAgICAgICAgIG1ldGFkYXRhID0gb3B0cy5tZXRhZGF0YSB8fCAnJztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXEgPSBuZXcgQ3JlYXRlU0lQSW5ib3VuZFRydW5rUmVxdWVzdCh7XG4gICAgICAgICAgICB0cnVuazogbmV3IFNJUEluYm91bmRUcnVua0luZm8oe1xuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgbnVtYmVyczogbnVtYmVycyxcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogbWV0YWRhdGEsXG4gICAgICAgICAgICAgICAgYWxsb3dlZEFkZHJlc3NlczogYWxsb3dlZEFkZHJlc3NlcyxcbiAgICAgICAgICAgICAgICBhbGxvd2VkTnVtYmVyczogYWxsb3dlZE51bWJlcnMsXG4gICAgICAgICAgICAgICAgYXV0aFVzZXJuYW1lOiBhdXRoVXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgYXV0aFBhc3N3b3JkOiBhdXRoUGFzc3dvcmQsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ0NyZWF0ZVNJUEluYm91bmRUcnVuaycsIHJlcSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHt9LCB7IGFkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIFNJUEluYm91bmRUcnVua0luZm8uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gbmFtZSBodW1hbi1yZWFkYWJsZSBuYW1lIG9mIHRoZSB0cnVua1xuICAgICAqIEBwYXJhbSBhZGRyZXNzIGhvc3RuYW1lIGFuZCBwb3J0IG9mIHRoZSBTSVAgc2VydmVyIHRvIGRpYWxcbiAgICAgKiBAcGFyYW0gbnVtYmVycyBwaG9uZSBudW1iZXJzIG9mIHRoZSB0cnVua1xuICAgICAqIEBwYXJhbSBvcHRzIENyZWF0ZVNpcFRydW5rT3B0aW9uc1xuICAgICAqL1xuICAgIGFzeW5jIGNyZWF0ZVNpcE91dGJvdW5kVHJ1bmsobmFtZSwgYWRkcmVzcywgbnVtYmVycywgb3B0cykge1xuICAgICAgICBsZXQgYXV0aFVzZXJuYW1lID0gJyc7XG4gICAgICAgIGxldCBhdXRoUGFzc3dvcmQgPSAnJztcbiAgICAgICAgbGV0IHRyYW5zcG9ydCA9IFNJUFRyYW5zcG9ydC5TSVBfVFJBTlNQT1JUX0FVVE87XG4gICAgICAgIGxldCBtZXRhZGF0YSA9ICcnO1xuICAgICAgICBpZiAob3B0cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBhdXRoVXNlcm5hbWUgPSBvcHRzLmF1dGhfdXNlcm5hbWUgfHwgJyc7XG4gICAgICAgICAgICBhdXRoUGFzc3dvcmQgPSBvcHRzLmF1dGhfcGFzc3dvcmQgfHwgJyc7XG4gICAgICAgICAgICB0cmFuc3BvcnQgPSBvcHRzLnRyYW5zcG9ydCB8fCBTSVBUcmFuc3BvcnQuU0lQX1RSQU5TUE9SVF9BVVRPO1xuICAgICAgICAgICAgbWV0YWRhdGEgPSBvcHRzLm1ldGFkYXRhIHx8ICcnO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlcSA9IG5ldyBDcmVhdGVTSVBPdXRib3VuZFRydW5rUmVxdWVzdCh7XG4gICAgICAgICAgICB0cnVuazogbmV3IFNJUE91dGJvdW5kVHJ1bmtJbmZvKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgbnVtYmVyczogbnVtYmVycyxcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogbWV0YWRhdGEsXG4gICAgICAgICAgICAgICAgdHJhbnNwb3J0OiB0cmFuc3BvcnQsXG4gICAgICAgICAgICAgICAgYXV0aFVzZXJuYW1lOiBhdXRoVXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgYXV0aFBhc3N3b3JkOiBhdXRoUGFzc3dvcmQsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ0NyZWF0ZVNJUE91dGJvdW5kVHJ1bmsnLCByZXEsIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7fSwgeyBhZG1pbjogdHJ1ZSB9KSk7XG4gICAgICAgIHJldHVybiBTSVBPdXRib3VuZFRydW5rSW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkIHVzZSBsaXN0U2lwSW5ib3VuZFRydW5rIG9yIGxpc3RTaXBPdXRib3VuZFRydW5rXG4gICAgICovXG4gICAgYXN5bmMgbGlzdFNpcFRydW5rKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHJlcSA9IHt9O1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChzdmMsICdMaXN0U0lQVHJ1bmsnLCBuZXcgTGlzdFNJUFRydW5rUmVxdWVzdChyZXEpLnRvSnNvbigpLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoe30sIHsgYWRtaW46IHRydWUgfSkpO1xuICAgICAgICByZXR1cm4gKF9hID0gTGlzdFNJUFRydW5rUmVzcG9uc2UuZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pLml0ZW1zKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICB9XG4gICAgYXN5bmMgbGlzdFNpcEluYm91bmRUcnVuaygpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCByZXEgPSB7fTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3Qoc3ZjLCAnTGlzdFNJUEluYm91bmRUcnVuaycsIG5ldyBMaXN0U0lQSW5ib3VuZFRydW5rUmVxdWVzdChyZXEpLnRvSnNvbigpLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoe30sIHsgYWRtaW46IHRydWUgfSkpO1xuICAgICAgICByZXR1cm4gKF9hID0gTGlzdFNJUEluYm91bmRUcnVua1Jlc3BvbnNlLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KS5pdGVtcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgfVxuICAgIGFzeW5jIGxpc3RTaXBPdXRib3VuZFRydW5rKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHJlcSA9IHt9O1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChzdmMsICdMaXN0U0lQT3V0Ym91bmRUcnVuaycsIG5ldyBMaXN0U0lQT3V0Ym91bmRUcnVua1JlcXVlc3QocmVxKS50b0pzb24oKSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHt9LCB7IGFkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIChfYSA9IExpc3RTSVBPdXRib3VuZFRydW5rUmVzcG9uc2UuZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pLml0ZW1zKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHNpcFRydW5rSWQgc2lwIHRydW5rIHRvIGRlbGV0ZVxuICAgICAqL1xuICAgIGFzeW5jIGRlbGV0ZVNpcFRydW5rKHNpcFRydW5rSWQpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3Qoc3ZjLCAnRGVsZXRlU0lQVHJ1bmsnLCBuZXcgRGVsZXRlU0lQVHJ1bmtSZXF1ZXN0KHsgc2lwVHJ1bmtJZCB9KS50b0pzb24oKSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHt9LCB7IGFkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIFNJUFRydW5rSW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBydWxlIHNpcCBkaXNwYXRjaCBydWxlXG4gICAgICogQHBhcmFtIG9wdHMgQ3JlYXRlU2lwRGlzcGF0Y2hSdWxlT3B0aW9uc1xuICAgICAqL1xuICAgIGFzeW5jIGNyZWF0ZVNpcERpc3BhdGNoUnVsZShydWxlLCBvcHRzKSB7XG4gICAgICAgIGxldCB0cnVua0lkcztcbiAgICAgICAgbGV0IGhpZGVQaG9uZU51bWJlciA9IGZhbHNlO1xuICAgICAgICBsZXQgbmFtZSA9ICcnO1xuICAgICAgICBsZXQgbWV0YWRhdGEgPSAnJztcbiAgICAgICAgbGV0IHJ1bGVQcm90byA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKG9wdHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdHJ1bmtJZHMgPSBvcHRzLnRydW5rSWRzO1xuICAgICAgICAgICAgaGlkZVBob25lTnVtYmVyID0gb3B0cy5oaWRlUGhvbmVOdW1iZXIgfHwgZmFsc2U7XG4gICAgICAgICAgICBuYW1lID0gb3B0cy5uYW1lIHx8ICcnO1xuICAgICAgICAgICAgbWV0YWRhdGEgPSBvcHRzLm1ldGFkYXRhIHx8ICcnO1xuICAgICAgICB9XG4gICAgICAgIGlmIChydWxlLnR5cGUgPT0gJ2RpcmVjdCcpIHtcbiAgICAgICAgICAgIHJ1bGVQcm90byA9IG5ldyBTSVBEaXNwYXRjaFJ1bGUoe1xuICAgICAgICAgICAgICAgIHJ1bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZTogJ2Rpc3BhdGNoUnVsZURpcmVjdCcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBuZXcgU0lQRGlzcGF0Y2hSdWxlRGlyZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvb21OYW1lOiBydWxlLnJvb21OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGluOiBydWxlLnBpbiB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJ1bGUudHlwZSA9PSAnaW5kaXZpZHVhbCcpIHtcbiAgICAgICAgICAgIHJ1bGVQcm90byA9IG5ldyBTSVBEaXNwYXRjaFJ1bGUoe1xuICAgICAgICAgICAgICAgIHJ1bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZTogJ2Rpc3BhdGNoUnVsZUluZGl2aWR1YWwnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbmV3IFNJUERpc3BhdGNoUnVsZUluZGl2aWR1YWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgcm9vbVByZWZpeDogcnVsZS5yb29tUHJlZml4LFxuICAgICAgICAgICAgICAgICAgICAgICAgcGluOiBydWxlLnBpbiB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlcSA9IG5ldyBDcmVhdGVTSVBEaXNwYXRjaFJ1bGVSZXF1ZXN0KHtcbiAgICAgICAgICAgIHJ1bGU6IHJ1bGVQcm90byxcbiAgICAgICAgICAgIHRydW5rSWRzOiB0cnVua0lkcyxcbiAgICAgICAgICAgIGhpZGVQaG9uZU51bWJlcjogaGlkZVBob25lTnVtYmVyLFxuICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgIG1ldGFkYXRhOiBtZXRhZGF0YSxcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ0NyZWF0ZVNJUERpc3BhdGNoUnVsZScsIHJlcSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHt9LCB7IGFkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIFNJUERpc3BhdGNoUnVsZUluZm8uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbiAgICBhc3luYyBsaXN0U2lwRGlzcGF0Y2hSdWxlKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHJlcSA9IHt9O1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChzdmMsICdMaXN0U0lQRGlzcGF0Y2hSdWxlJywgbmV3IExpc3RTSVBEaXNwYXRjaFJ1bGVSZXF1ZXN0KHJlcSkudG9Kc29uKCksIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7fSwgeyBhZG1pbjogdHJ1ZSB9KSk7XG4gICAgICAgIHJldHVybiAoX2EgPSBMaXN0U0lQRGlzcGF0Y2hSdWxlUmVzcG9uc2UuZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pLml0ZW1zKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHNpcERpc3BhdGNoUnVsZUlkIHNpcCB0cnVuayB0byBkZWxldGVcbiAgICAgKi9cbiAgICBhc3luYyBkZWxldGVTaXBEaXNwYXRjaFJ1bGUoc2lwRGlzcGF0Y2hSdWxlSWQpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3Qoc3ZjLCAnRGVsZXRlU0lQRGlzcGF0Y2hSdWxlJywgbmV3IERlbGV0ZVNJUERpc3BhdGNoUnVsZVJlcXVlc3QoeyBzaXBEaXNwYXRjaFJ1bGVJZCB9KS50b0pzb24oKSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHt9LCB7IGFkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIFNJUERpc3BhdGNoUnVsZUluZm8uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc2lwVHJ1bmtJZCBzaXAgdHJ1bmsgdG8gdXNlIGZvciB0aGUgY2FsbFxuICAgICAqIEBwYXJhbSBudW1iZXIgbnVtYmVyIHRvIGRpYWxcbiAgICAgKiBAcGFyYW0gcm9vbU5hbWUgcm9vbSB0byBhdHRhY2ggdGhlIGNhbGwgdG9cbiAgICAgKiBAcGFyYW0gb3B0cyBDcmVhdGVTaXBQYXJ0aWNpcGFudE9wdGlvbnNcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVTaXBQYXJ0aWNpcGFudChzaXBUcnVua0lkLCBudW1iZXIsIHJvb21OYW1lLCBvcHRzKSB7XG4gICAgICAgIGxldCBwYXJ0aWNpcGFudElkZW50aXR5ID0gJyc7XG4gICAgICAgIGxldCBwYXJ0aWNpcGFudE5hbWUgPSAnJztcbiAgICAgICAgbGV0IHBhcnRpY2lwYW50TWV0YWRhdGEgPSAnJztcbiAgICAgICAgbGV0IGR0bWYgPSAnJztcbiAgICAgICAgbGV0IHBsYXlSaW5ndG9uZSA9IGZhbHNlO1xuICAgICAgICBsZXQgaGlkZVBob25lTnVtYmVyID0gZmFsc2U7XG4gICAgICAgIGlmIChvcHRzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHBhcnRpY2lwYW50SWRlbnRpdHkgPSBvcHRzLnBhcnRpY2lwYW50SWRlbnRpdHkgfHwgJyc7XG4gICAgICAgICAgICBwYXJ0aWNpcGFudE5hbWUgPSBvcHRzLnBhcnRpY2lwYW50TmFtZSB8fCAnJztcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGEgPSBvcHRzLnBhcnRpY2lwYW50TWV0YWRhdGEgfHwgJyc7XG4gICAgICAgICAgICBkdG1mID0gb3B0cy5kdG1mIHx8ICcnO1xuICAgICAgICAgICAgcGxheVJpbmd0b25lID0gb3B0cy5wbGF5UmluZ3RvbmUgfHwgZmFsc2U7XG4gICAgICAgICAgICBoaWRlUGhvbmVOdW1iZXIgPSBvcHRzLmhpZGVQaG9uZU51bWJlciB8fCBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXEgPSBuZXcgQ3JlYXRlU0lQUGFydGljaXBhbnRSZXF1ZXN0KHtcbiAgICAgICAgICAgIHNpcFRydW5rSWQ6IHNpcFRydW5rSWQsXG4gICAgICAgICAgICBzaXBDYWxsVG86IG51bWJlcixcbiAgICAgICAgICAgIHJvb21OYW1lOiByb29tTmFtZSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50SWRlbnRpdHk6IHBhcnRpY2lwYW50SWRlbnRpdHksXG4gICAgICAgICAgICBwYXJ0aWNpcGFudE5hbWU6IHBhcnRpY2lwYW50TmFtZSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGE6IHBhcnRpY2lwYW50TWV0YWRhdGEsXG4gICAgICAgICAgICBkdG1mOiBkdG1mLFxuICAgICAgICAgICAgcGxheVJpbmd0b25lOiBwbGF5UmluZ3RvbmUsXG4gICAgICAgICAgICBoaWRlUGhvbmVOdW1iZXI6IGhpZGVQaG9uZU51bWJlcixcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ0NyZWF0ZVNJUFBhcnRpY2lwYW50JywgcmVxLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoe30sIHsgY2FsbDogdHJ1ZSB9KSk7XG4gICAgICAgIHJldHVybiBTSVBQYXJ0aWNpcGFudEluZm8uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpcENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js":
/*!**********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/TwirpRPC.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwirpRpc: () => (/* binding */ TwirpRpc),\n/* harmony export */   livekitPackage: () => (/* binding */ livekitPackage)\n/* harmony export */ });\n/* harmony import */ var camelcase_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase-keys */ \"(rsc)/./node_modules/camelcase-keys/index.js\");\n\n// twirp RPC adapter for client implementation\nconst defaultPrefix = '/twirp';\nconst livekitPackage = 'livekit';\n/**\n * JSON based Twirp V7 RPC\n */\nclass TwirpRpc {\n    constructor(host, pkg, prefix) {\n        if (host.startsWith('ws')) {\n            host = host.replace('ws', 'http');\n        }\n        this.host = host;\n        this.pkg = pkg;\n        this.prefix = prefix || defaultPrefix;\n    }\n    async request(service, method, data, headers) {\n        const path = `${this.prefix}/${this.pkg}.${service}/${method}`;\n        const url = new URL(path, this.host);\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, headers),\n            body: JSON.stringify(data),\n        });\n        if (!response.ok) {\n            throw new Error(`Request failed with status ${response.status}: ${response.statusText}`);\n        }\n        const parsedResp = await response.json();\n        return (0,camelcase_keys__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parsedResp, { deep: true });\n    }\n}\n//# sourceMappingURL=TwirpRPC.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvVHdpcnBSUEMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQzNDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVksR0FBRyxTQUFTLEdBQUcsUUFBUSxHQUFHLE9BQU87QUFDckU7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGtDQUFrQyxnQkFBZ0I7QUFDdkY7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwwREFBMEQsZ0JBQWdCLElBQUksb0JBQW9CO0FBQ2xHO0FBQ0E7QUFDQSxlQUFlLDBEQUFhLGVBQWUsWUFBWTtBQUN2RDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1jb21wYW5pb24vLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvVHdpcnBSUEMuanM/YjNkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2FtZWxjYXNlS2V5cyBmcm9tICdjYW1lbGNhc2Uta2V5cyc7XG4vLyB0d2lycCBSUEMgYWRhcHRlciBmb3IgY2xpZW50IGltcGxlbWVudGF0aW9uXG5jb25zdCBkZWZhdWx0UHJlZml4ID0gJy90d2lycCc7XG5leHBvcnQgY29uc3QgbGl2ZWtpdFBhY2thZ2UgPSAnbGl2ZWtpdCc7XG4vKipcbiAqIEpTT04gYmFzZWQgVHdpcnAgVjcgUlBDXG4gKi9cbmV4cG9ydCBjbGFzcyBUd2lycFJwYyB7XG4gICAgY29uc3RydWN0b3IoaG9zdCwgcGtnLCBwcmVmaXgpIHtcbiAgICAgICAgaWYgKGhvc3Quc3RhcnRzV2l0aCgnd3MnKSkge1xuICAgICAgICAgICAgaG9zdCA9IGhvc3QucmVwbGFjZSgnd3MnLCAnaHR0cCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG4gICAgICAgIHRoaXMucGtnID0gcGtnO1xuICAgICAgICB0aGlzLnByZWZpeCA9IHByZWZpeCB8fCBkZWZhdWx0UHJlZml4O1xuICAgIH1cbiAgICBhc3luYyByZXF1ZXN0KHNlcnZpY2UsIG1ldGhvZCwgZGF0YSwgaGVhZGVycykge1xuICAgICAgICBjb25zdCBwYXRoID0gYCR7dGhpcy5wcmVmaXh9LyR7dGhpcy5wa2d9LiR7c2VydmljZX0vJHttZXRob2R9YDtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChwYXRoLCB0aGlzLmhvc3QpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuYXNzaWduKHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnIH0sIGhlYWRlcnMpLFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcnNlZFJlc3AgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHJldHVybiBjYW1lbGNhc2VLZXlzKHBhcnNlZFJlc3AsIHsgZGVlcDogdHJ1ZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ud2lycFJQQy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js":
/*!*****************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/WebhookReceiver.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebhookEvent: () => (/* binding */ WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* binding */ WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* binding */ authorizeHeader)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n\n\nconst authorizeHeader = 'Authorize';\nclass WebhookEvent extends _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebhookEvent {\n    constructor() {\n        super(...arguments);\n        this.event = '';\n    }\n    static fromBinary(bytes, options) {\n        return new WebhookEvent().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WebhookEvent().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WebhookEvent().fromJsonString(jsonString, options);\n    }\n}\nclass WebhookReceiver {\n    constructor(apiKey, apiSecret) {\n        this.verifier = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier(apiKey, apiSecret);\n    }\n    /**\n     *\n     * @param body string of the posted body\n     * @param authHeader `Authorization` header from the request\n     * @param skipAuth true to skip auth validation\n     * @returns\n     */\n    async receive(body, authHeader, skipAuth = false) {\n        // verify token\n        if (!skipAuth) {\n            if (!authHeader) {\n                throw new Error('authorization header is empty');\n            }\n            const claims = await this.verifier.verify(authHeader);\n            // confirm sha\n            const encoder = new TextEncoder();\n            const hash = await crypto.subtle.digest('SHA-256', encoder.encode(body));\n            const hashDecoded = btoa(Array.from(new Uint8Array(hash))\n                .map((v) => String.fromCharCode(v))\n                .join(''));\n            if (claims.sha256 !== hashDecoded) {\n                throw new Error('sha256 checksum of body does not match');\n            }\n        }\n        return WebhookEvent.fromJson(JSON.parse(body), { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=WebhookReceiver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvV2ViaG9va1JlY2VpdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNFO0FBQ3JCO0FBQzFDO0FBQ0EsMkJBQTJCLDJEQUFpQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLDRCQUE0QiwwREFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCwyQkFBMkI7QUFDcEY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1dlYmhvb2tSZWNlaXZlci5qcz8yZTNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYmhvb2tFdmVudCBhcyBQcm90b1dlYmhvb2tFdmVudCB9IGZyb20gJ0BsaXZla2l0L3Byb3RvY29sJztcbmltcG9ydCB7IFRva2VuVmVyaWZpZXIgfSBmcm9tICcuL0FjY2Vzc1Rva2VuLmpzJztcbmV4cG9ydCBjb25zdCBhdXRob3JpemVIZWFkZXIgPSAnQXV0aG9yaXplJztcbmV4cG9ydCBjbGFzcyBXZWJob29rRXZlbnQgZXh0ZW5kcyBQcm90b1dlYmhvb2tFdmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZXZlbnQgPSAnJztcbiAgICB9XG4gICAgc3RhdGljIGZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBXZWJob29rRXZlbnQoKS5mcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFdlYmhvb2tFdmVudCgpLmZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgV2ViaG9va0V2ZW50KCkuZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFdlYmhvb2tSZWNlaXZlciB7XG4gICAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQpIHtcbiAgICAgICAgdGhpcy52ZXJpZmllciA9IG5ldyBUb2tlblZlcmlmaWVyKGFwaUtleSwgYXBpU2VjcmV0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYm9keSBzdHJpbmcgb2YgdGhlIHBvc3RlZCBib2R5XG4gICAgICogQHBhcmFtIGF1dGhIZWFkZXIgYEF1dGhvcml6YXRpb25gIGhlYWRlciBmcm9tIHRoZSByZXF1ZXN0XG4gICAgICogQHBhcmFtIHNraXBBdXRoIHRydWUgdG8gc2tpcCBhdXRoIHZhbGlkYXRpb25cbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIHJlY2VpdmUoYm9keSwgYXV0aEhlYWRlciwgc2tpcEF1dGggPSBmYWxzZSkge1xuICAgICAgICAvLyB2ZXJpZnkgdG9rZW5cbiAgICAgICAgaWYgKCFza2lwQXV0aCkge1xuICAgICAgICAgICAgaWYgKCFhdXRoSGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdhdXRob3JpemF0aW9uIGhlYWRlciBpcyBlbXB0eScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgY2xhaW1zID0gYXdhaXQgdGhpcy52ZXJpZmllci52ZXJpZnkoYXV0aEhlYWRlcik7XG4gICAgICAgICAgICAvLyBjb25maXJtIHNoYVxuICAgICAgICAgICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgICAgICAgY29uc3QgaGFzaCA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KCdTSEEtMjU2JywgZW5jb2Rlci5lbmNvZGUoYm9keSkpO1xuICAgICAgICAgICAgY29uc3QgaGFzaERlY29kZWQgPSBidG9hKEFycmF5LmZyb20obmV3IFVpbnQ4QXJyYXkoaGFzaCkpXG4gICAgICAgICAgICAgICAgLm1hcCgodikgPT4gU3RyaW5nLmZyb21DaGFyQ29kZSh2KSlcbiAgICAgICAgICAgICAgICAuam9pbignJykpO1xuICAgICAgICAgICAgaWYgKGNsYWltcy5zaGEyNTYgIT09IGhhc2hEZWNvZGVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzaGEyNTYgY2hlY2tzdW0gb2YgYm9keSBkb2VzIG5vdCBtYXRjaCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBXZWJob29rRXZlbnQuZnJvbUpzb24oSlNPTi5wYXJzZShib2R5KSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYmhvb2tSZWNlaXZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/grants.js":
/*!********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/grants.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   claimsToJwtPayload: () => (/* binding */ claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* binding */ trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\nfunction trackSourceToString(source) {\n    switch (source) {\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.CAMERA:\n            return 'camera';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.MICROPHONE:\n            return 'microphone';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE:\n            return 'screen_share';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE_AUDIO:\n            return 'screen_share_audio';\n        default:\n            throw new TypeError(`Cannot convert TrackSource ${source} to string`);\n    }\n}\nfunction claimsToJwtPayload(grant) {\n    var _a;\n    const claim = Object.assign({}, grant);\n    // eslint-disable-next-line no-restricted-syntax\n    if (Array.isArray((_a = claim.video) === null || _a === void 0 ? void 0 : _a.canPublishSources)) {\n        claim.video.canPublishSources = claim.video.canPublishSources.map(trackSourceToString);\n    }\n    return claim;\n}\n//# sourceMappingURL=grants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvZ3JhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNnRDtBQUN6QztBQUNQO0FBQ0EsYUFBYSwwREFBVztBQUN4QjtBQUNBLGFBQWEsMERBQVc7QUFDeEI7QUFDQSxhQUFhLDBEQUFXO0FBQ3hCO0FBQ0EsYUFBYSwwREFBVztBQUN4QjtBQUNBO0FBQ0EsOERBQThELFFBQVE7QUFDdEU7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1jb21wYW5pb24vLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvZ3JhbnRzLmpzP2RmMjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyNCBMaXZlS2l0LCBJbmMuXG4vL1xuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbmltcG9ydCB7IFRyYWNrU291cmNlIH0gZnJvbSAnQGxpdmVraXQvcHJvdG9jb2wnO1xuZXhwb3J0IGZ1bmN0aW9uIHRyYWNrU291cmNlVG9TdHJpbmcoc291cmNlKSB7XG4gICAgc3dpdGNoIChzb3VyY2UpIHtcbiAgICAgICAgY2FzZSBUcmFja1NvdXJjZS5DQU1FUkE6XG4gICAgICAgICAgICByZXR1cm4gJ2NhbWVyYSc7XG4gICAgICAgIGNhc2UgVHJhY2tTb3VyY2UuTUlDUk9QSE9ORTpcbiAgICAgICAgICAgIHJldHVybiAnbWljcm9waG9uZSc7XG4gICAgICAgIGNhc2UgVHJhY2tTb3VyY2UuU0NSRUVOX1NIQVJFOlxuICAgICAgICAgICAgcmV0dXJuICdzY3JlZW5fc2hhcmUnO1xuICAgICAgICBjYXNlIFRyYWNrU291cmNlLlNDUkVFTl9TSEFSRV9BVURJTzpcbiAgICAgICAgICAgIHJldHVybiAnc2NyZWVuX3NoYXJlX2F1ZGlvJztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCBjb252ZXJ0IFRyYWNrU291cmNlICR7c291cmNlfSB0byBzdHJpbmdgKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gY2xhaW1zVG9Kd3RQYXlsb2FkKGdyYW50KSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGNsYWltID0gT2JqZWN0LmFzc2lnbih7fSwgZ3JhbnQpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuICAgIGlmIChBcnJheS5pc0FycmF5KChfYSA9IGNsYWltLnZpZGVvKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FuUHVibGlzaFNvdXJjZXMpKSB7XG4gICAgICAgIGNsYWltLnZpZGVvLmNhblB1Ymxpc2hTb3VyY2VzID0gY2xhaW0udmlkZW8uY2FuUHVibGlzaFNvdXJjZXMubWFwKHRyYWNrU291cmNlVG9TdHJpbmcpO1xuICAgIH1cbiAgICByZXR1cm4gY2xhaW07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.AccessToken),\n/* harmony export */   AliOSSUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AliOSSUpload),\n/* harmony export */   AutoParticipantEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoParticipantEgress),\n/* harmony export */   AutoTrackEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoTrackEgress),\n/* harmony export */   AzureBlobUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AzureBlobUpload),\n/* harmony export */   DataPacket_Kind: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DataPacket_Kind),\n/* harmony export */   DirectFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DirectFileOutput),\n/* harmony export */   EgressClient: () => (/* reexport safe */ _EgressClient_js__WEBPACK_IMPORTED_MODULE_2__.EgressClient),\n/* harmony export */   EgressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo),\n/* harmony export */   EgressStatus: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressStatus),\n/* harmony export */   EncodedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileOutput),\n/* harmony export */   EncodedFileType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileType),\n/* harmony export */   EncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptions),\n/* harmony export */   EncodingOptionsPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptionsPreset),\n/* harmony export */   GCPUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.GCPUpload),\n/* harmony export */   ImageOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageOutput),\n/* harmony export */   IngressAudioEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingOptions),\n/* harmony export */   IngressAudioEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingPreset),\n/* harmony export */   IngressAudioOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioOptions),\n/* harmony export */   IngressClient: () => (/* reexport safe */ _IngressClient_js__WEBPACK_IMPORTED_MODULE_3__.IngressClient),\n/* harmony export */   IngressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo),\n/* harmony export */   IngressInput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInput),\n/* harmony export */   IngressState: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressState),\n/* harmony export */   IngressVideoEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingOptions),\n/* harmony export */   IngressVideoEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingPreset),\n/* harmony export */   IngressVideoOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoOptions),\n/* harmony export */   ParticipantEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest),\n/* harmony export */   ParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo),\n/* harmony export */   ParticipantInfo_State: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo_State),\n/* harmony export */   ParticipantPermission: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission),\n/* harmony export */   Room: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room),\n/* harmony export */   RoomCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest),\n/* harmony export */   RoomEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomEgress),\n/* harmony export */   RoomServiceClient: () => (/* reexport safe */ _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_4__.RoomServiceClient),\n/* harmony export */   S3Upload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.S3Upload),\n/* harmony export */   SIPDispatchRuleInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo),\n/* harmony export */   SIPParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo),\n/* harmony export */   SIPTrunkInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo),\n/* harmony export */   SegmentedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileOutput),\n/* harmony export */   SegmentedFileProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileProtocol),\n/* harmony export */   SipClient: () => (/* reexport safe */ _SipClient_js__WEBPACK_IMPORTED_MODULE_5__.SipClient),\n/* harmony export */   StreamOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamOutput),\n/* harmony export */   StreamProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamProtocol),\n/* harmony export */   TokenVerifier: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier),\n/* harmony export */   TrackCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest),\n/* harmony export */   TrackEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest),\n/* harmony export */   TrackInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackInfo),\n/* harmony export */   TrackSource: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource),\n/* harmony export */   TrackType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackType),\n/* harmony export */   WebEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest),\n/* harmony export */   WebhookEvent: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_6__.WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_6__.WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_6__.authorizeHeader),\n/* harmony export */   claimsToJwtPayload: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_7__.claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_7__.trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n/* harmony import */ var _EgressClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EgressClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js\");\n/* harmony import */ var _IngressClient_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./IngressClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js\");\n/* harmony import */ var _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RoomServiceClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js\");\n/* harmony import */ var _SipClient_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SipClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js\");\n/* harmony import */ var _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WebhookReceiver.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ3kwQjtBQUN4eUI7QUFDQztBQUNDO0FBQ0k7QUFDUjtBQUNNO0FBQ1Q7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1jb21wYW5pb24vLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvaW5kZXguanM/MjUwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDI0IExpdmVLaXQsIEluYy5cbi8vXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuZXhwb3J0IHsgQWxpT1NTVXBsb2FkLCBBdXRvUGFydGljaXBhbnRFZ3Jlc3MsIEF1dG9UcmFja0VncmVzcywgQXp1cmVCbG9iVXBsb2FkLCBEYXRhUGFja2V0X0tpbmQsIERpcmVjdEZpbGVPdXRwdXQsIEVncmVzc0luZm8sIEVncmVzc1N0YXR1cywgRW5jb2RlZEZpbGVPdXRwdXQsIEVuY29kZWRGaWxlVHlwZSwgRW5jb2RpbmdPcHRpb25zLCBFbmNvZGluZ09wdGlvbnNQcmVzZXQsIEdDUFVwbG9hZCwgSW1hZ2VPdXRwdXQsIEluZ3Jlc3NBdWRpb0VuY29kaW5nT3B0aW9ucywgSW5ncmVzc0F1ZGlvRW5jb2RpbmdQcmVzZXQsIEluZ3Jlc3NBdWRpb09wdGlvbnMsIEluZ3Jlc3NJbmZvLCBJbmdyZXNzSW5wdXQsIEluZ3Jlc3NTdGF0ZSwgSW5ncmVzc1ZpZGVvRW5jb2RpbmdPcHRpb25zLCBJbmdyZXNzVmlkZW9FbmNvZGluZ1ByZXNldCwgSW5ncmVzc1ZpZGVvT3B0aW9ucywgUGFydGljaXBhbnRFZ3Jlc3NSZXF1ZXN0LCBQYXJ0aWNpcGFudEluZm8sIFBhcnRpY2lwYW50SW5mb19TdGF0ZSwgUGFydGljaXBhbnRQZXJtaXNzaW9uLCBSb29tLCBSb29tQ29tcG9zaXRlRWdyZXNzUmVxdWVzdCwgUm9vbUVncmVzcywgUzNVcGxvYWQsIFNJUERpc3BhdGNoUnVsZUluZm8sIFNJUFBhcnRpY2lwYW50SW5mbywgU0lQVHJ1bmtJbmZvLCBTZWdtZW50ZWRGaWxlT3V0cHV0LCBTZWdtZW50ZWRGaWxlUHJvdG9jb2wsIFN0cmVhbU91dHB1dCwgU3RyZWFtUHJvdG9jb2wsIFRyYWNrQ29tcG9zaXRlRWdyZXNzUmVxdWVzdCwgVHJhY2tFZ3Jlc3NSZXF1ZXN0LCBUcmFja0luZm8sIFRyYWNrU291cmNlLCBUcmFja1R5cGUsIFdlYkVncmVzc1JlcXVlc3QsIH0gZnJvbSAnQGxpdmVraXQvcHJvdG9jb2wnO1xuZXhwb3J0ICogZnJvbSAnLi9BY2Nlc3NUb2tlbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL0VncmVzc0NsaWVudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL0luZ3Jlc3NDbGllbnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9Sb29tU2VydmljZUNsaWVudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL1NpcENsaWVudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL1dlYmhvb2tSZWNlaXZlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2dyYW50cy5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/index.js\n");

/***/ })

};
;